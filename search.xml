<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PicGo配置gitee图床</title>
    <url>/blog/posts/ba9c4b95.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="建立gitee仓库"><a href="#建立gitee仓库" class="headerlink" title="建立gitee仓库"></a>建立gitee仓库</h2><h3 id="注册码云账号"><a href="#注册码云账号" class="headerlink" title="注册码云账号"></a>注册码云账号</h3><p>进入<a href="https://gitee.com/" target="_blank" rel="noopener">码云官网</a>,点击右上角的注册，如果有账号了就直接登陆</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402165915.png" alt=""></p>
<h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402170209.png" alt=""></p>
<p>填写完仓库名称以及勾选<code>公开</code></p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402170520.png" alt=""></p>
<p>在跳转后的链接中复制后半段</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402170749.png" alt=""></p>
<h2 id="安装第三方插件"><a href="#安装第三方插件" class="headerlink" title="安装第三方插件"></a>安装第三方插件</h2><p>在<code>PicGo</code>的插件项中搜索<code>gitee</code>，会找到两个插件，我比较建议安装第二个插件</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402165347.png" alt=""></p>
<p>点击图床设置，选择gitee，吧刚才复制的后半段链接粘贴到第一个文本框中</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171001.png" alt=""></p>
<h2 id="请求token"><a href="#请求token" class="headerlink" title="请求token"></a>请求token</h2><p>在gitee页面点击设置</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171158.png" alt=""></p>
<p>选择私人令牌</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171312.png" alt=""></p>
<p>点击右上角的<code>添加新令牌</code>，在页面中选择第二个和第三个复选框</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171434.png" alt=""></p>
<p>之后系统会让你输入账号密码来验证安全性，输完密码后会弹出你的私人令牌</p>
<blockquote>
<p>注：私人令牌只会出现一次，如果遗失请删除原令牌后新建一个新的私人令牌</p>
</blockquote>
<p>然后将你的私人令牌粘贴到<code>PicGo</code>中的第三个文本框中</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402171001.png" alt=""></p>
<p>点击<code>设为默认图床</code>，在点击<code>确认</code></p>
<p>至此，<code>PicGo</code>配置<code>gitee</code>图床完成</p>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>PicGo</tag>
        <tag>图床</tag>
        <tag>gitee</tag>
        <tag>gitee图床</tag>
      </tags>
  </entry>
  <entry>
    <title>分享一个图床软件-PicGo</title>
    <url>/blog/posts/c07567fd.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="PicGo概述"><a href="#PicGo概述" class="headerlink" title="PicGo概述"></a>PicGo概述</h2><p>先上图</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402162635.png" alt=""></p>
<p>PicGo: 一个用于快速上传图片并获取图片URL链接的工具</p>
<p>软件本体支持的图床：</p>
<ul>
<li>七牛图床</li>
<li>腾讯云</li>
<li>又拍云</li>
<li>GitHub</li>
<li>阿里云</li>
<li>Imhur图床</li>
</ul>
<p>我用的是以<code>码云</code>为平台搭建的图床，别的不说，国内访问就是快。</p>
<h2 id="PicGo功能"><a href="#PicGo功能" class="headerlink" title="PicGo功能"></a>PicGo功能</h2><p>其实从上面的界面截图就可以看出大部分的功能</p>
<ul>
<li>支持推拽图片上传</li>
<li>支持系统剪贴板图片上传</li>
<li><code>Windows</code>和<code>macOS</code>支持右键菜单上传</li>
<li>上传图片后自动返回链接到剪贴板</li>
<li>支持返回<code>markdown</code>,<code>HTML</code>,<code>URL</code>,<code>UBB</code>,<code>Custom</code>格式的链接</li>
<li>支持插件系统，从而支持第三方图床，比如我我就是用的第三方插件<code>gitee-uploader</code></li>
<li>支持HTTP请求上传图片，最好的例子：<code>Typora</code>的图片自动上传至图床就是用的这个功能</li>
</ul>
<p>可以去看看官方给的<a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html" target="_blank" rel="noopener">快速上手</a></p>
<p><code>PicGo</code>的<a href="https://github.com/PicGo/Awesome-PicGo" target="_blank" rel="noopener">插件页面</a></p>
<h2 id="PicGo下载安装"><a href="#PicGo下载安装" class="headerlink" title="PicGo下载安装"></a>PicGo下载安装</h2><p><a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">官方链接</a></p>
<blockquote>
<p>注：我在配置<code>manjaro linux</code>下的<code>PicGo</code>时发现它有可能会卡死系统的<code>KDE</code>界面</p>
</blockquote>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>工具分享</tag>
        <tag>PicGo</tag>
        <tag>图床</tag>
        <tag>图床软件</tag>
      </tags>
  </entry>
  <entry>
    <title>mkv文件处理工具-mkvtoolnix</title>
    <url>/blog/posts/eeec278f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="mkvtoolnix工具简介"><a href="#mkvtoolnix工具简介" class="headerlink" title="mkvtoolnix工具简介"></a>mkvtoolnix工具简介</h2><p>MKVToolNix是一个用于创建，检查和修改mkv文件的工具，可用于Lunx，其他Unices和Windows</p>
<blockquote>
<p>官网原文：MKVToolNix is a set of tools to create, alter and inspect Matroska files under Linux, other Unices and Windows.</p>
</blockquote>
<h3 id="工具截图"><a href="#工具截图" class="headerlink" title="工具截图"></a>工具截图</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402102216.png" alt=""></p>
<blockquote>
<p>截图的版本是43.0.0，官网现在最新是44.0.0</p>
</blockquote>
<h3 id="官网截图"><a href="#官网截图" class="headerlink" title="官网截图"></a>官网截图</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402102343.png" alt=""></p>
<p><a href="https://mkvtoolnix.download/" target="_blank" rel="noopener">官网地址：https://mkvtoolnix.download/</a></p>
<h2 id="mkvtoolnix工具功能"><a href="#mkvtoolnix工具功能" class="headerlink" title="mkvtoolnix工具功能"></a>mkvtoolnix工具功能</h2><ul>
<li>文件混流</li>
<li>检查mkv文件信息</li>
<li>编辑mkv文件头部</li>
<li>编辑mkv文件章节</li>
</ul>
<h3 id="文件混流"><a href="#文件混流" class="headerlink" title="文件混流"></a>文件混流</h3><p>第一标签页中可以让多个文件混流为一个mkv文件，也可以让多个文件混轮到一个mkv文件内</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402102749.png" alt=""></p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402102939.png" alt=""></p>
<p>第二标签页控制mkv文件的输出</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103006.png" alt=""></p>
<p>第三标签页可以添加自定义的附件</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103202.png" alt=""></p>
<h3 id="检查mkv文件信息"><a href="#检查mkv文件信息" class="headerlink" title="检查mkv文件信息"></a>检查mkv文件信息</h3><p>这里做例子的是我自己吧从B站下载的视频和字幕文件混流的mkv文件</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103316.png" alt=""></p>
<h3 id="编辑mkv文件头部"><a href="#编辑mkv文件头部" class="headerlink" title="编辑mkv文件头部"></a>编辑mkv文件头部</h3><p>这里做例子的是我自己吧从B站下载的视频和字幕文件混流的mkv文件</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103503.png" alt=""></p>
<h3 id="编辑mkv文件章节"><a href="#编辑mkv文件章节" class="headerlink" title="编辑mkv文件章节"></a>编辑mkv文件章节</h3><p>这里做例子的是我自己吧从B站下载的视频和字幕文件混流的mkv文件</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103609.png" alt=""></p>
<h2 id="mkvtoolnix工具安装"><a href="#mkvtoolnix工具安装" class="headerlink" title="mkvtoolnix工具安装"></a>mkvtoolnix工具安装</h2><p>官网上有各种平台的安装文件和安装方法</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402103753.png" alt=""></p>
<p>由于我只用<code>Windows</code>和<code>manjaro linux</code>所以只介绍这两个系统的安装方式</p>
<h3 id="Windows安装方式"><a href="#Windows安装方式" class="headerlink" title="Windows安装方式"></a>Windows安装方式</h3><ul>
<li><p>点击<code>Downloads</code>进入下载页面</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402104100.png" alt=""></p>
</li>
<li><p>点击<code>Windows</code>跳转到相应的部分</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402104239.png" alt=""></p>
</li>
<li><p>点击图中的链接</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402104430.png" alt=""></p>
<p>不要去点击下面那酷似下载链接的超链接，那是SHA校验</p>
</li>
<li><p>进入软件网站后根据自己的系统选择相应的文件去下载</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200402104718.png" alt=""></p>
</li>
</ul>
<h3 id="manjaro-linux安装方式"><a href="#manjaro-linux安装方式" class="headerlink" title="manjaro linux安装方式"></a>manjaro linux安装方式</h3><p>因为<code>manjaro linux</code>是<code>arch linux</code>系的系统，使用<code>pacman</code>管理安装包，所以直接运行下面的命令就行了</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pacman -S mkvtoolnix-cli mkvtoolnix-gui</span><br></pre></td></tr></table></figure>

<p>在这里也可以看出来<code>mkvtoolnix</code>是由命令行程序<code>mkvtoolnix-cli</code>和图形化界面<code>mkvtoolnix-gui</code>组成，类似于<code>arch linux</code>中的<code>Qv2ray</code></p>
<h2 id="mkvtoolnix使用说明"><a href="#mkvtoolnix使用说明" class="headerlink" title="mkvtoolnix使用说明"></a>mkvtoolnix使用说明</h2><p>建议去<a href="https://mkvtoolnix.download/" target="_blank" rel="noopener">官网</a>找说明文档</p>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>工具分享</tag>
        <tag>mkvtoolnix</tag>
        <tag>mkv</tag>
        <tag>mkv文件处理工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro中文输入法推荐</title>
    <url>/blog/posts/26fb3f4d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>最新的<code>manjaro</code>因为组件更新的缘故会导致搜狗拼音输入法无法使用，在使用了其他输入法之后，我比较推荐<code>sunpinyin+cloudpinyin</code>的组合</p>
<h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>键入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fcitx-im fcitx-configtool fcitx-cloudyinpin fcitx-sunpinyin</span><br></pre></td></tr></table></figure>

<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>在<code>/etc/profile</code>或者<code>~/.xprofile</code>文件中添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=@im=fcitx</span><br></pre></td></tr></table></figure>

<h3 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h3><p>才疏学浅，不知道怎么刷新，就重启电脑吧。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>中文输入法</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro换源</title>
    <url>/blog/posts/7795a5e7.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="修改官方源"><a href="#修改官方源" class="headerlink" title="修改官方源"></a>修改官方源</h2><p>运行下面的命令，将对中国源进行排序：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br></pre></td></tr></table></figure>

<p>然后选第一行的源就行了</p>
<h2 id="添加archlinux源"><a href="#添加archlinux源" class="headerlink" title="添加archlinux源"></a>添加archlinux源</h2><p>运行下面的命令，修改文件<code>/etc/pacman.conf</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/pacman.conf</span><br></pre></td></tr></table></figure>

<p>在文件末尾添加：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#中科大源</span></span><br><span class="line"></span><br><span class="line">[archlinuxcn]</span><br><span class="line"></span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line"></span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#清华源</span></span><br><span class="line"></span><br><span class="line">[archlinuxcn]</span><br><span class="line"></span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line"></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>

<p>上面两个源用快的那个就行了。</p>
<h2 id="更新缓存"><a href="#更新缓存" class="headerlink" title="更新缓存"></a>更新缓存</h2><p>执行命令，更新缓存：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>源</tag>
        <tag>linux源</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下zip文件解压乱码问题处理</title>
    <url>/blog/posts/44513157.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><ul>
<li><code>linux</code>与<code>windows</code>系统的压缩文件的默认编码不同，所以导致一部分<code>windows</code>平台下压缩的压缩文件在<code>linux</code>系统下解压乱码</li>
</ul>
<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>现在网络上可以找到的解决方案有如下几点：</p>
<ul>
<li>在使用命令<code>unzip</code>是添加参数<code>-O</code>更改解压编码，从而解决文件名乱码问题（将<code>-O</code>封装到<code>unzip</code>命令中）</li>
<li>正常解压。然后用命令装换文件编码</li>
<li>如果是<code>arch系的linux</code>系统则非常简单，安装相应的<code>AUR</code>工具即可</li>
</ul>
<p>因为我常用<code>manjaro linux</code>，所以在这儿只详细介绍第三种方法</p>
<h2 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h2><p>使用<code>AUR</code>安装工具<code>unzip-natspec</code>和<code>p7zip-natspec</code>，命令行如下</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yay -S unzip-natspec p7zip-natspec</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>zip</tag>
        <tag>7z</tag>
        <tag>乱码</tag>
        <tag>压缩文件</tag>
      </tags>
  </entry>
  <entry>
    <title>CSGO练习投掷物有关指令</title>
    <url>/blog/posts/4dbff450.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="设置比赛时间"><a href="#设置比赛时间" class="headerlink" title="设置比赛时间"></a>设置比赛时间</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mp_roundtime <span class="number">60</span> <span class="comment">#死亡竞技模式</span></span><br><span class="line"></span><br><span class="line">mp_roundtime_defuse <span class="number">60</span> <span class="comment">#休闲和竞技模式</span></span><br></pre></td></tr></table></figure>

<h2 id="关闭队友伤害"><a href="#关闭队友伤害" class="headerlink" title="关闭队友伤害"></a>关闭队友伤害</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mp_teammates_are_enemies <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h2 id="开启作弊模式"><a href="#开启作弊模式" class="headerlink" title="开启作弊模式"></a>开启作弊模式</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sv_cheats <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="允许投掷物5枚"><a href="#允许投掷物5枚" class="headerlink" title="允许投掷物5枚"></a>允许投掷物5枚</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ammo_grenade_limit_total <span class="number">5</span></span><br></pre></td></tr></table></figure>

<h1 id="无限弹药手雷"><a href="#无限弹药手雷" class="headerlink" title="无限弹药手雷"></a>无限弹药手雷</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sv_infinite_ammo <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="开启投掷物轨迹"><a href="#开启投掷物轨迹" class="headerlink" title="开启投掷物轨迹"></a>开启投掷物轨迹</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sv_grenade_trajectory <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="钱数目设置16000"><a href="#钱数目设置16000" class="headerlink" title="钱数目设置16000"></a>钱数目设置16000</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mp_startmoney <span class="number">16000</span></span><br></pre></td></tr></table></figure>

<h2 id="地图重新开始"><a href="#地图重新开始" class="headerlink" title="地图重新开始"></a>地图重新开始</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mp_restartgame <span class="number">1</span></span><br></pre></td></tr></table></figure>


<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mp_roundtime <span class="number">60</span> <span class="comment">#死亡竞技模式比赛时间60分钟</span></span><br><span class="line">mp_roundtime_defuse <span class="number">60</span> <span class="comment">#休闲和竞技模式比赛时间60分钟</span></span><br><span class="line"></span><br><span class="line">mp_teammates_are_enemies <span class="number">0</span> <span class="comment">#关闭队友伤害</span></span><br><span class="line"></span><br><span class="line">sv_cheats <span class="number">1</span> <span class="comment">#开启作弊模式</span></span><br><span class="line"></span><br><span class="line">ammo_grenade_limit_total <span class="number">5</span> <span class="comment">#允许投掷物5枚</span></span><br><span class="line"></span><br><span class="line">sv_infinite_ammo <span class="number">1</span> <span class="comment">#无限弹药手雷</span></span><br><span class="line"></span><br><span class="line">sv_grenade_trajectory <span class="number">1</span> <span class="comment">#开启投掷物轨迹</span></span><br><span class="line"></span><br><span class="line">mp_startmoney <span class="number">16000</span> <span class="comment">#钱数目设置16000</span></span><br><span class="line"></span><br><span class="line">mp_restartgame <span class="number">1</span> <span class="comment">#地图重新开始</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CSGO</category>
      </categories>
      <tags>
        <tag>CSGO</tag>
        <tag>投掷物</tag>
        <tag>道具</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习-字符串转整数</title>
    <url>/blog/posts/93e92635.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>利用C语言标准库中的<code>int atoi()</code>函数(头文件<code>&lt;stdlib.h&gt;</code>)实现：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = atoi(<span class="string">"1234"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>自己编写函数实现</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">str_to_int</span><span class="params">(<span class="keyword">char</span>* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> slong = <span class="number">-1</span>, num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (; *(p + slong + <span class="number">1</span>) &lt;= <span class="string">'9'</span> &amp;&amp; *(p + slong + <span class="number">1</span>) &gt;= <span class="string">'0'</span>; slong++);</span><br><span class="line">	<span class="keyword">for</span> (; slong &gt;= <span class="number">0</span>; slong--)</span><br><span class="line">		num += (*(p++) - (<span class="string">'0'</span> - <span class="number">0</span>)) * <span class="built_in">pow</span>(<span class="number">10</span>, slong);</span><br><span class="line">	<span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = str_to_int(<span class="string">"1234"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p>利用C语言标准库中的<code>double atof()</code>函数(头文件<code>&lt;stdlib.h&gt;</code>)实现：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> num = atof(<span class="string">"1234.5678"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
      <tags>
        <tag>C语言学习</tag>
        <tag>字符串转整数</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习-大一C语言实验课代码</title>
    <url>/blog/posts/a65ba048.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>大一的实验课报告再此放出：</p>
<h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><ol>
<li>通过上机实践编程，辅以典型例题，熟悉编程环境，提升实际动手编程能力。</li>
<li>掌握C语言的基本输入输出函数。</li>
<li>掌握C语言的三种程序结构(顺序结构、选择结构、循环结构)。</li>
<li>掌握冒泡排序法和选择排序法，并用其解决实际问题。</li>
<li>掌握C语言的9种控制语句并熟练运用。</li>
<li>掌握函数的定义和调用的方法与格式。</li>
<li>掌握一维数组以及多维数值的声明和访问格式。</li>
<li>掌握字符串比较大小，字符串复制等有关字符串处理的函数。</li>
<li>学会利用C语言标准库中的函数来简化自己的代码。</li>
</ol>
<h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><h3 id="实验一"><a href="#实验一" class="headerlink" title="实验一"></a>实验一</h3><h4 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h4><ul>
<li>题目：用scanf函数输入数据，a=3,b=7,x=8.2,y=123.22,c1=‘A’，c2=‘a’,用printf函数进行输出。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/1.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a, b;</span><br><span class="line">	<span class="keyword">float</span> x, y;</span><br><span class="line">	<span class="keyword">char</span> c1, c2;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"用scanf函数格式化输入数据，\na=3,b=7,x=8.2,y=123.22,c1='A',c2='a',\n用printf函数进行输出。\n注:输入的符号应为英文符号\n"</span>);</span><br><span class="line">	scanf_s(<span class="string">"a=%d,b=%d,x=%f,y=%f,c1='%c',c2='%c'"</span>,&amp;a,&amp;b,&amp;x,&amp;y,&amp;c1,<span class="number">1</span>,&amp;c2,<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"a=%d,b=%d,x=%.1f,y=%.2f,c1='%c',c2='%c'"</span>,a,b,x,y,c1,c2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h4><ul>
<li>题目：设半径r=1.5,圆柱高h=3,求圆周长，圆面积，圆柱表面积，圆柱体积。用scanf输入数据，输出结果，输入要有文字说明，取小数点后2位数字。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/2.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926535</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">double</span> r, h;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"计算圆周长，圆面积，圆柱表面积，圆柱体积的程序\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请输入半径r="</span>);</span><br><span class="line">	scanf_s(<span class="string">"%lf"</span>, &amp;r);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请输入高h="</span>);</span><br><span class="line">	scanf_s(<span class="string">"%lf"</span>, &amp;h);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"圆周长为%.2lf,圆面积为%.2lf,圆柱表面积为%.2lf,圆柱体积为%.2lf"</span>, <span class="number">2</span> * PI * r, PI * r * r, <span class="number">2</span> * PI * r * h, PI * r * r * h);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h4><ul>
<li>题目：给出一个不多于5位的正整数，要求：（1） 求出它是几位数？（2） 分别输出每个数字？</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/3.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">jishu</span><span class="params">(<span class="keyword">char</span>* a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fenli</span><span class="params">(<span class="keyword">char</span>* a, <span class="keyword">char</span>* b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> c[MAX];</span><br><span class="line">	<span class="keyword">char</span> d[MAX] = &#123;<span class="string">'\0'</span>&#125;;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请键入一个不多于五位的整数(可以多几位但一定不要超过%d位)：\n"</span>,MAX);</span><br><span class="line">	scanf_s(<span class="string">"%s"</span>, c,<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"它是%d位数\n"</span>, jishu(c));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"分开输出：\n"</span>);</span><br><span class="line">	fenli(c,d);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"逆序输出：%s"</span>, d);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">jishu</span><span class="params">(<span class="keyword">char</span>* a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">while</span> (*(a + ++i) != <span class="string">'\0'</span>);</span><br><span class="line">	<span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fenli</span><span class="params">(<span class="keyword">char</span>* a,<span class="keyword">char</span>* b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>, t = jishu(a);</span><br><span class="line">	<span class="keyword">while</span> (*(a + i) != <span class="string">'\0'</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"第%d位:%c\n"</span>, i + <span class="number">1</span>, *(a + i));</span><br><span class="line">		*(b + --t) = *(a + i++);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实验二"><a href="#实验二" class="headerlink" title="实验二"></a>实验二</h3><h4 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h4><ul>
<li>题目：输入两个正整数，求其最大公约数和最小公倍数。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/4.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHUCHU(max,min) &#123;printf(<span class="meta-string">"最大公约数是%d,最小公倍数是%d"</span>,max,min);&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a, b, a_1, b_1;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"输入两个正整数，求其最大公约数和最小公倍数"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n请键入两个正整数（以空格分开）：\n"</span>);</span><br><span class="line">	scanf_s(<span class="string">"%d %d"</span>,&amp;a,&amp;b);</span><br><span class="line">	a_1 = a; b_1 = b;</span><br><span class="line">	<span class="keyword">if</span> (a == b)&#123;</span><br><span class="line">		SHUCHU(a,b)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">while</span> (a != b)&#123;</span><br><span class="line">			<span class="keyword">if</span> (a &gt; b)&#123;</span><br><span class="line">				a = a - b;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				b = b - a;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		SHUCHU(a, a_1 * b_1 / a)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h4><ul>
<li>题目：一个数如果恰好等于它的因子之和，这个数就称为完数，例如6=1+2+3，编程找出1000之内的所有完数，并按下面格式输出其因子。    6 its factors are 1,2,3</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/5.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"输出%d内所有的完数：\n"</span>, MAX);</span><br><span class="line">	<span class="keyword">int</span> middle_a = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> middle = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> middle_s[MAX] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i &lt;= MAX; i++)&#123;</span><br><span class="line">		middle = <span class="number">0</span>;</span><br><span class="line">		middle_a = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">1</span>; t &lt; i; t++)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i % t == <span class="number">0</span>)&#123;</span><br><span class="line">				middle += t;</span><br><span class="line">				middle_s[middle_a++] = t;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		middle_s[middle_a] = MAX + <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span> (i == middle)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"\n%d its factors are "</span>, i);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; middle_s[a] != MAX + <span class="number">1</span>; a++)&#123;</span><br><span class="line">				<span class="keyword">if</span> (middle_s[a + <span class="number">1</span>] == MAX + <span class="number">1</span>)&#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">"%d"</span>, middle_s[a]);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%d,"</span>, middle_s[a]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h4><ul>
<li>题目：输入一行字符，分别统计出其中英文字母、空格、数字和其他字符的个数。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/6.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">data_analysis_typedef</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> num;</span><br><span class="line">	<span class="keyword">int</span> small;</span><br><span class="line">	<span class="keyword">int</span> big;</span><br><span class="line">	<span class="keyword">int</span> blank;</span><br><span class="line">	<span class="keyword">int</span> other;</span><br><span class="line">&#125;data_analysis_typedef;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data_analysis_typedef</span> <span class="title">data_analysis</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">num_main</span><span class="params">(<span class="keyword">char</span>* a)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> data[MAX];</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请键入一行不大于%d个数的字符串(无汉字)：\n"</span>, MAX);</span><br><span class="line">	gets(data);</span><br><span class="line">	initialize();</span><br><span class="line">	num_main(data);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"统计结果如下:\n数字有%d个\n小写字母有%d个\n大写字母有%d个\n空格有%d个\n其他字符有%d个\n字符总计%d个。\n"</span>, data_analysis.num, data_analysis.small, data_analysis.big, data_analysis.blank, data_analysis.other, data_analysis.i);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	data_analysis.big = <span class="number">0</span>;</span><br><span class="line">	data_analysis.i = <span class="number">0</span>;</span><br><span class="line">	data_analysis.num = <span class="number">0</span>;</span><br><span class="line">	data_analysis.other = <span class="number">0</span>;</span><br><span class="line">	data_analysis.small = <span class="number">0</span>;</span><br><span class="line">	data_analysis.blank = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">num_main</span><span class="params">(<span class="keyword">char</span>* a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (; *(a + data_analysis.i) != <span class="string">'\0'</span>; data_analysis.i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (*(a + data_analysis.i) &gt;= <span class="string">'0'</span> &amp;&amp; *(a + data_analysis.i) &lt;= <span class="string">'9'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			data_analysis.num++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (*(a + data_analysis.i) &gt;= <span class="string">'a'</span> &amp;&amp; *(a + data_analysis.i) &lt;= <span class="string">'z'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			data_analysis.small++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (*(a + data_analysis.i) &gt;= <span class="string">'A'</span> &amp;&amp; *(a + data_analysis.i) &lt;= <span class="string">'Z'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			data_analysis.big++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (*(a + data_analysis.i) == <span class="number">0x20</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			data_analysis.blank++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			data_analysis.other++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实验三"><a href="#实验三" class="headerlink" title="实验三"></a>实验三</h3><h4 id="第一题-2"><a href="#第一题-2" class="headerlink" title="第一题"></a>第一题</h4><ul>
<li>题目：从键盘输入10个整数，并求出这10个数的最大值及出现次数。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/7.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> data[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">int</span> max = <span class="number">0</span>, num = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请键入10个整数(以空格分开)，将输出这10个数的最大值及出现次数：\n"</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"第%d个数："</span>, i + <span class="number">1</span>);</span><br><span class="line">		scanf_s(<span class="string">"%d"</span>, data + i);</span><br><span class="line">	&#125;</span><br><span class="line">	max = data[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (max &lt; data[i])</span><br><span class="line">		&#123;</span><br><span class="line">			max = data[i];</span><br><span class="line">			num = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (max == data[i])</span><br><span class="line">		&#123;</span><br><span class="line">			num++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"最大数为%d\n"</span>, max);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"最大数出现次数为%d\n"</span>, num);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第二题-2"><a href="#第二题-2" class="headerlink" title="第二题"></a>第二题</h4><ul>
<li>题目：编写个人所得税计算器。输入个税起征点和月收入，计算应交税款。（起征点为2000元）|不超过500元的部分税率5％|超过500元至2000元的部分税率10％|超过2000元至5000元的部分税率15％|超过5000元至20000元的部分税率20％|超过20000元至40000元的部分税率25％|超过40000元至60000元的部分税率30％|超过60000元至80000元的部分税率35％|超过80000元至100000元的部分税率40％|超过100000元的部分税率45％。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/8.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">double</span> data = <span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">double</span> shui = <span class="number">0.0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"个人所得税计算器-ZZT\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"计算标准：\n起征点为2000元\n不超过500元的部分税率5％\n超过500元至2000元的部分税率10％\n超过2000元至5000元的部分税率15％\n超过5000元至20000元的部分税率20％\n超过20000元至40000元的部分税率25％\n超过40000元至60000元的部分税率30％\n超过60000元至80000元的部分税率35％\n超过80000元至100000元的部分税率40％\n超过100000元的部分税率45％。\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请键入所得钱数：\n"</span>);</span><br><span class="line">	scanf_s(<span class="string">"%lf"</span>, &amp;data);</span><br><span class="line">	<span class="keyword">if</span> (data &lt;= <span class="number">2000</span>)&#123;</span><br><span class="line">		shui = <span class="number">0.0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		shui = <span class="number">500</span> * <span class="number">0.05</span> + <span class="number">1500</span> * <span class="number">0.10</span>;</span><br><span class="line">		<span class="keyword">if</span> (data &lt;= <span class="number">5000</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			shui += (data - <span class="number">2000</span>) * <span class="number">0.15</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			shui += <span class="number">3000</span> * <span class="number">0.15</span>;</span><br><span class="line">			<span class="keyword">if</span> (data &lt;= <span class="number">20000</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				shui += (data - <span class="number">5000</span>) * <span class="number">0.20</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				shui += <span class="number">15000</span> * <span class="number">0.20</span>;</span><br><span class="line">				<span class="keyword">if</span> (data &lt;= <span class="number">40000</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					shui += (data - <span class="number">20000</span>) * <span class="number">0.25</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					shui += <span class="number">20000</span> * <span class="number">0.25</span>;</span><br><span class="line">					<span class="keyword">if</span> (data &lt;= <span class="number">60000</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						shui += (data - <span class="number">40000</span>) * <span class="number">0.30</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">					&#123;</span><br><span class="line">						shui += <span class="number">20000</span> * <span class="number">0.30</span>;</span><br><span class="line">						<span class="keyword">if</span> (data &lt;= <span class="number">80000</span>)</span><br><span class="line">						&#123;</span><br><span class="line">							shui += (data - <span class="number">60000</span>) * <span class="number">0.35</span>;</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">						&#123;</span><br><span class="line">							shui += <span class="number">20000</span> * <span class="number">0.35</span>;</span><br><span class="line">							<span class="keyword">if</span> (data &lt;= <span class="number">100000</span>)</span><br><span class="line">							&#123;</span><br><span class="line">								shui += (data - <span class="number">80000</span>) * <span class="number">0.40</span>;</span><br><span class="line">							&#125;</span><br><span class="line">							<span class="keyword">else</span></span><br><span class="line">							&#123;</span><br><span class="line">								shui += <span class="number">20000</span> * <span class="number">0.40</span>;</span><br><span class="line">								shui += (data - <span class="number">100000</span>) * <span class="number">0.45</span>;</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"个人所得税为%lf元"</span>, shui);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实验四"><a href="#实验四" class="headerlink" title="实验四"></a>实验四</h3><h4 id="第一题-3"><a href="#第一题-3" class="headerlink" title="第一题"></a>第一题</h4><ul>
<li>题目：写一个函数，将一个字符串中的元音字母复制到另一字符串，然后输出。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/9.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> a[MAX] = &#123; <span class="string">'\0'</span> &#125;;</span><br><span class="line">	<span class="keyword">char</span> b[MAX] = &#123; <span class="string">'\0'</span> &#125;;</span><br><span class="line">	<span class="keyword">int</span> b_i = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请输入一个字符串(只有英文字母，且不能超过%d位)：\n"</span>,MAX);</span><br><span class="line">	scanf_s(<span class="string">"%s"</span>,a,MAX);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">'\0'</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] == <span class="string">'a'</span> || a[i] == <span class="string">'A'</span> || a[i] == <span class="string">'e'</span> || a[i] == <span class="string">'E'</span> || a[i] == <span class="string">'i'</span> || a[i] == <span class="string">'I'</span> || a[i] == <span class="string">'o'</span> || a[i] == <span class="string">'O'</span> || a[i] == <span class="string">'u'</span> || a[i] == <span class="string">'U'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			b[b_i++] = a[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"其中的元音字母有：%s\n"</span>,b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第二题-3"><a href="#第二题-3" class="headerlink" title="第二题"></a>第二题</h4><ul>
<li>题目：一只公鸡十五元，一只母鸡十三元，三只小鸡十元。用一千元买鸡，可以各买公鸡、母鸡、小鸡多省只？</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/10.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"已知. 一只公鸡十五元，一只母鸡十三元，三只小鸡十元。用一千元买鸡。\n"</span>);</span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> gj_p = <span class="number">15</span>, mj_p = <span class="number">13</span>, xj_p = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= MAX / gj_p; a++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= MAX / mj_p; b++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> c = <span class="number">0</span>; c &lt;= MAX / xj_p; c++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (a * gj_p + b * mj_p + c * xj_p == MAX)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">"公鸡：%d个，母鸡：%d个，小鸡：%d个。\t"</span>, a, b, c * <span class="number">3</span>);</span><br><span class="line">					num++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"共计：%d种购买方式。"</span>, num);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第三题-2"><a href="#第三题-2" class="headerlink" title="第三题"></a>第三题</h4><ul>
<li>题目：输入10个学生5门课的成绩，分别用函数实现下列功能：①计算每个学生平均分；②计算每门课的平均分；③找出50个分数中最高的分数所对应的学生和课程；④计算平均分方差：</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/11.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">data_retuen</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">double</span> e_student[<span class="number">10</span>];</span><br><span class="line">	<span class="keyword">double</span> e_s_a;</span><br><span class="line">	<span class="keyword">double</span> e_s_a2;</span><br><span class="line">	<span class="keyword">double</span> e_project[<span class="number">5</span>];</span><br><span class="line">	<span class="keyword">int</span> max[<span class="number">2</span>];</span><br><span class="line">	<span class="keyword">double</span> fangcha;</span><br><span class="line">&#125;data_retuen;</span><br><span class="line"></span><br><span class="line"><span class="function">struct data_retuen* <span class="title">num_main</span><span class="params">(<span class="keyword">double</span> p[<span class="number">10</span>][<span class="number">5</span>])</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">double</span> data[<span class="number">10</span>][<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a=<span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"请键入第%d个学生的五个成绩(以空格分开)："</span>, a + <span class="number">1</span>);</span><br><span class="line">		scanf_s(<span class="string">"%lf %lf %lf %lf %lf"</span>, data[a], data[a] + <span class="number">1</span>, data[a] + <span class="number">2</span>, data[a] + <span class="number">3</span>, data[a] + <span class="number">4</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"数据录入成功，正在计算中\n"</span>);</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">data_retuen</span>* <span class="title">middle</span> = <span class="title">num_main</span>(<span class="title">data</span>);</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"第%d个学生的平均分：%.3lf\n"</span>, a + <span class="number">1</span>, middle-&gt;e_student[a]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">4</span>; a++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"第%d个课程的平均分：%.3lf\n"</span>, a + <span class="number">1</span>, middle-&gt;e_project[a]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"最高分位%.3lf，第%d个学生，第%d个课程。\n"</span>, data[middle-&gt;max[<span class="number">0</span>]][middle-&gt;max[<span class="number">1</span>]], middle-&gt;max[<span class="number">0</span>] + <span class="number">1</span>, middle-&gt;max[<span class="number">1</span>] + <span class="number">1</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"平均分方差：%.3lf"</span>, middle-&gt;fangcha);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">struct data_retuen* <span class="title">num_main</span><span class="params">(<span class="keyword">double</span> p[<span class="number">10</span>][<span class="number">5</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">data_retuen</span>* <span class="title">middle</span>;</span></span><br><span class="line">	middle = (struct data_retuen*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct data_retuen));</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">		middle-&gt;e_student[a] = (p[a][<span class="number">0</span>] + p[a][<span class="number">1</span>] + p[a][<span class="number">2</span>] + p[a][<span class="number">3</span>] + p[a][<span class="number">4</span>]) / <span class="number">5</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= <span class="number">4</span>; b++)&#123;</span><br><span class="line">		middle-&gt;e_project[b] = (p[<span class="number">0</span>][b] + p[<span class="number">1</span>][b] + p[<span class="number">2</span>][b] + p[<span class="number">3</span>][b] + p[<span class="number">4</span>][b] + p[<span class="number">5</span>][b] + p[<span class="number">6</span>][b] + p[<span class="number">7</span>][b] + p[<span class="number">8</span>][b] + p[<span class="number">9</span>][b]) / <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	middle-&gt;max[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">	middle-&gt;max[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= <span class="number">4</span>; b++)&#123;</span><br><span class="line">			<span class="keyword">if</span> (p[middle-&gt;max[<span class="number">0</span>]][middle-&gt;max[<span class="number">1</span>]] &lt;= p[a][b])&#123;</span><br><span class="line">				middle-&gt;max[<span class="number">0</span>] = a;</span><br><span class="line">				middle-&gt;max[<span class="number">1</span>] = b;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	middle-&gt;e_s_a2 = <span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">		middle-&gt;e_s_a2 += middle-&gt;e_student[a] * middle-&gt;e_student[a];</span><br><span class="line">	&#125;</span><br><span class="line">	middle-&gt;e_s_a = <span class="number">0.0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">		middle-&gt;e_s_a += middle-&gt;e_student[a];</span><br><span class="line">	&#125;</span><br><span class="line">	middle-&gt;fangcha = <span class="number">0.1</span>* middle-&gt;e_s_a2 - (middle-&gt;e_s_a * <span class="number">0.1</span>) * (middle-&gt;e_s_a * <span class="number">0.1</span>);</span><br><span class="line">	<span class="keyword">return</span> middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实验五"><a href="#实验五" class="headerlink" title="实验五"></a>实验五</h3><h4 id="第一题-4"><a href="#第一题-4" class="headerlink" title="第一题"></a>第一题</h4><ul>
<li>题目：输入3个整数，按由小到大的顺序输出。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/12.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> data[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">int</span> shuchu[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请键入三个整数(以空格分开)：\n"</span>);</span><br><span class="line">	scanf_s(<span class="string">"%d %d %d"</span>, data, data + <span class="number">1</span>, data + <span class="number">2</span>);</span><br><span class="line">	<span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line">	shuchu[<span class="number">0</span>] = data[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt;= <span class="number">2</span>; t++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">1</span>; a++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (data[a] &lt; data[a + <span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				k = data[a];</span><br><span class="line">				data[a] = data[a + <span class="number">1</span>];</span><br><span class="line">				data[a + <span class="number">1</span>] = k;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">2</span>; a &gt;= <span class="number">0</span>; a--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>, data[a]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第二题-4"><a href="#第二题-4" class="headerlink" title="第二题"></a>第二题</h4><ul>
<li>题目：输入3个字符串，按由小到大的顺序输出。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/13.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> c[<span class="number">3</span>][<span class="number">1000</span>] = &#123; <span class="string">'\0'</span> &#125;;</span><br><span class="line">	<span class="keyword">char</span> middle[<span class="number">1000</span>] = &#123; <span class="string">'\0'</span> &#125;;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">2</span>; a++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"请输入第%d个字符串："</span>, a + <span class="number">1</span>);</span><br><span class="line">		scanf_s(<span class="string">"%s"</span>, c[a], <span class="number">1000</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt;= <span class="number">2</span>; t++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">1</span>; a++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">strcmp</span>(c[a], c[a + <span class="number">1</span>]) &lt; <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				strcpy_s(middle, <span class="number">1000</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>), c[a]);</span><br><span class="line">				strcpy_s(c[a], <span class="number">1000</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>), c[a + <span class="number">1</span>]);</span><br><span class="line">				strcpy_s(c[a + <span class="number">1</span>], <span class="number">1000</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>), middle);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"由小到大输出：\n"</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">2</span>; a &gt;= <span class="number">0</span>; a--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, c[a]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第三题-3"><a href="#第三题-3" class="headerlink" title="第三题"></a>第三题</h4><ul>
<li>题目：有n个人围成一圈，顺序排号。从第1个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/14.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> address;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">&#125;data_tp;</span><br><span class="line">data_tp data[MAX];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请输入人数n(最大为%d)："</span>, MAX);</span><br><span class="line">	scanf_s(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; n; a++)&#123;</span><br><span class="line">		data[a].address = a + <span class="number">1</span>;</span><br><span class="line">		data[a].i = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; n &amp;&amp; b &lt;= <span class="number">3</span> * (n - <span class="number">1</span>); a++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (data[a].i == <span class="number">0</span>)&#123;</span><br><span class="line">			b--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (((b + <span class="number">1</span>) % <span class="number">3</span> == <span class="number">0</span>) &amp;&amp; (data[a].i == <span class="number">1</span>))&#123;</span><br><span class="line">			data[a].i = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (a == n - <span class="number">1</span>)&#123;</span><br><span class="line">			a = <span class="number">-1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		b++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; n; a++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (data[a].i == <span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"剩下的人的位置为：%d\n"</span>, data[a].address);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h4><ul>
<li>题目：有一字符串，包含n个字符。写一函数，将此字符串从中第m个字符开始的全部字符复制成为另一个字符串。</li>
<li>开发环境：Visual Studio 2019</li>
<li>运行结果：<img src="/file/pic/shiyanke/15.PNG" alt="大一C语言实验课代码"></li>
<li>程序代码：</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 10000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">st_copy</span><span class="params">(<span class="keyword">char</span>* p, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span>* p = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * MAX);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"输入一个字符串(不能输入中文，最大字符数为：%d)：\n"</span>, MAX);</span><br><span class="line">	scanf_s(<span class="string">"%s"</span>, p, MAX);</span><br><span class="line">	<span class="keyword">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (*(p + n++) != <span class="string">'\0'</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"字符串有%d个字符，请键入m的值："</span>, n - <span class="number">1</span>);</span><br><span class="line">	scanf_s(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%s"</span>, st_copy(p, n - <span class="number">1</span>, m - <span class="number">1</span>));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">st_copy</span><span class="params">(<span class="keyword">char</span>* p, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (m &gt;= n)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> &amp;<span class="string">"发生错误：m必须小于n."</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">char</span>* middle = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * (n - m + <span class="number">1</span>));</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= n - m; a++)</span><br><span class="line">	&#123;</span><br><span class="line">		*(middle + a) = *(p + m + a);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="思考总结"><a href="#思考总结" class="headerlink" title="思考总结"></a>思考总结</h2><p>实验5.3中的结构体数组定义是我的漏洞之一，在此次实验中我通过查阅资料和实践操作掌握的结构体数组的定义。实验5.4让我更加扎实地掌握了指针型函数的定义与使用。在写代码的过程中不断地错误让我意识到调试地重要性，也学会了如何才能更快地找到自己代码地错误。</p>
]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
      <tags>
        <tag>C语言学习</tag>
        <tag>C</tag>
        <tag>实验课</tag>
        <tag>代码</tag>
        <tag>大一实验课</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习-取整数的个位,十位,百位</title>
    <url>/blog/posts/c934aed8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>此文主要介绍一种取整数的个十、百、位的方法</p>
<h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><p>看门见山，直接放出代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">123</span>;</span><br><span class="line">    <span class="keyword">int</span> ge, shi, bai;</span><br><span class="line">    ge = a % <span class="number">10</span>;</span><br><span class="line">    shi = a % <span class="number">100</span> / <span class="number">10</span>;</span><br><span class="line">    bai = a / <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"数为：%d，个位是：%d，十位是：%d，百位是：%d。"</span>, a, ge, shi, bai);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201828.PNG" alt="c_geshibai"></p>
<h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><ul>
<li>整数取10的余数则为个位</li>
<li>整数取100的余数在除以十，则个位被删掉</li>
<li>整数除以100，则十位和个位被删掉</li>
</ul>
]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
      <tags>
        <tag>C语言学习</tag>
        <tag>C</tag>
        <tag>取个位</tag>
        <tag>取十位</tag>
        <tag>取百位</tag>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习-运用后缀表达式实现的四则表达式计算器</title>
    <url>/blog/posts/6a83b6d3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>作为一个C语言初学者，本人的水平极其有限，在此写下自己在编写四则表达式计算器时的感悟和所用到的方法与思想，希望日后回头看当初的自己时有所感受。</p>
<h2 id="程序目标"><a href="#程序目标" class="headerlink" title="程序目标"></a>程序目标</h2><ol>
<li>实现带括号的四则表达式的运算</li>
<li>支持小数</li>
<li>支持负数</li>
</ol>
<h2 id="程序思路"><a href="#程序思路" class="headerlink" title="程序思路"></a>程序思路</h2><ol>
<li>录入表达式到一个字符数组</li>
<li>对表达式进行分析</li>
<li>将表达式的数字与符号分开，分别放在两个数组中</li>
<li>创建一个包含指针以及所指向元素的类型的结构体数组，以原表达式的顺序指向数字和符号数组的元素</li>
<li>对结构体数组进行分析</li>
<li>处理结构体数组指向元素中的负数</li>
<li>将结构体数组指向的中缀表达式转换为后缀表达式，仍然用一个结构体数组储存其地址<code>(注：此操作只操作指针)</code></li>
<li>运算后缀表达式</li>
<li>输出结果</li>
<li>将全局变量初始化，循环回第一步</li>
</ol>
<h2 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h2><blockquote>
<p>注：有关符号的判断可以使用字符的整数值进行判断</p>
<p>注：有关后缀表达式的介绍请移步<a href="/posts/6a83b6d3.html">C语言学习-后缀表达式</a></p>
</blockquote>
<h3 id="创建全局变量和指针"><a href="#创建全局变量和指针" class="headerlink" title="创建全局变量和指针"></a>创建全局变量和指针</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**定义全局变量和指针以及结构体**/</span></span><br><span class="line"><span class="keyword">char</span> original_string[MAX];			<span class="comment">//存放读取的字符串</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">double</span> number_array[MAX2]; 	<span class="comment">//存放分流出的数字</span></span><br><span class="line"><span class="keyword">char</span> char_array[MAX2];				<span class="comment">//存放分流出的字符</span></span><br><span class="line"><span class="keyword">char</span> *middle[MAX];					<span class="comment">//存放中缀表达式转后缀表达式的符号的指针</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">orginal_mix_t</span> = <span class="number">0</span>;				<span class="comment">//主要指示mix_d有多少个元素</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">original_t</span> = <span class="number">0</span>;					<span class="comment">//只指示original_string有多少个元素</span></span><br><span class="line"><span class="keyword">int</span> top = <span class="number">0</span>, top_m = <span class="number">0</span>;				<span class="comment">//指示后缀表达式数组的最后一位和middle数组的最后一位</span></span><br><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">	Data,</span><br><span class="line">	Symbol</span><br><span class="line">&#125; data_type;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">mix</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">void</span> *d;</span><br><span class="line">	<span class="keyword">enum</span> data_type type;</span><br><span class="line">&#125; mix;</span><br><span class="line">mix mix_d[MAX];  <span class="comment">//中缀表达式指针存放处</span></span><br><span class="line">mix suffix[MAX]; <span class="comment">//后缀表达式指针存放处</span></span><br><span class="line"><span class="comment">/**定义全局变量和指针以及结构体**/</span></span><br></pre></td></tr></table></figure>

<h3 id="创建清理数据函数"><a href="#创建清理数据函数" class="headerlink" title="创建清理数据函数"></a>创建清理数据函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right, mix mix_exp[MAX])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (left + i &lt;= <span class="keyword">orginal_mix_t</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		mix_exp[left + i] = mix_exp[right + i++];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">orginal_mix_t</span> = <span class="keyword">orginal_mix_t</span> - (right - left);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="录入表达式到字符数组"><a href="#录入表达式到字符数组" class="headerlink" title="录入表达式到字符数组"></a>录入表达式到字符数组</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"四则表达式计算器\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"请键入一个算式（支持四则混合运算和带括号运算）：\n"</span>);</span><br><span class="line">gets(original_string);</span><br></pre></td></tr></table></figure>

<h3 id="判定表达式中是否有非法字符"><a href="#判定表达式中是否有非法字符" class="headerlink" title="判定表达式中是否有非法字符"></a>判定表达式中是否有非法字符</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = MAX1; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (original_string[MAX1 - i] != <span class="string">'\0'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (!((original_string[MAX1 - i] == <span class="string">'.'</span>) || (original_string[MAX1 - i] == <span class="string">'1'</span>) || (original_string[MAX1 - i] == <span class="string">'2'</span>) || (original_string[MAX1 - i] == <span class="string">'3'</span>) || (original_string[MAX1 - i] == <span class="string">'4'</span>) || (original_string[MAX1 - i] == <span class="string">'5'</span>) || (original_string[MAX1 - i] == <span class="string">'6'</span>) || (original_string[MAX1 - i] == <span class="string">'7'</span>) || (original_string[MAX1 - i] == <span class="string">'8'</span>) || (original_string[MAX1 - i] == <span class="string">'9'</span>) || (original_string[MAX1 - i] == <span class="string">'0'</span>) || (original_string[MAX1 - i] == <span class="string">'/'</span>) || (original_string[MAX1 - i] == <span class="string">'*'</span>) || (original_string[MAX1 - i] == <span class="string">'-'</span>) || (original_string[MAX1 - i] == <span class="string">'+'</span>) || (original_string[MAX1 - i] == <span class="string">'('</span>) || (original_string[MAX1 - i] == <span class="string">')'</span>)))</span><br><span class="line">			&#123;</span><br><span class="line">				k++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">orginal_mix_t</span> = MAX1 - i;</span><br><span class="line">			i = <span class="number">-1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">original_t</span> = <span class="keyword">orginal_mix_t</span>;</span><br><span class="line">	<span class="keyword">orginal_mix_t</span> = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (k == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n读取式子成功，正在计算中...\n"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"式子键入错误，错误%d处。\n"</span>, k);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="判断有多少个字符和数字"><a href="#判断有多少个字符和数字" class="headerlink" title="判断有多少个字符和数字"></a>判断有多少个字符和数字</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dispose_long</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> <span class="keyword">t_t</span> = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; original_string[i] != <span class="string">'\0'</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!((original_string[i] == <span class="string">'.'</span>) || (original_string[i] == <span class="string">'1'</span>) || (original_string[i] == <span class="string">'2'</span>) || (original_string[i] == <span class="string">'3'</span>) || (original_string[i] == <span class="string">'4'</span>) || (original_string[i] == <span class="string">'5'</span>) || (original_string[i] == <span class="string">'6'</span>) || (original_string[i] == <span class="string">'7'</span>) || (original_string[i] == <span class="string">'8'</span>) || (original_string[i] == <span class="string">'9'</span>) || (original_string[i] == <span class="string">'0'</span>)))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">t_t</span> = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">orginal_mix_t</span>++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">t_t</span> == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">orginal_mix_t</span>++;</span><br><span class="line">			<span class="keyword">t_t</span> = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="将字符串转化为数字和符号"><a href="#将字符串转化为数字和符号" class="headerlink" title="将字符串转化为数字和符号"></a>将字符串转化为数字和符号</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transform</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a1 = <span class="number">0</span>, a2 = <span class="number">0</span>, a3 = <span class="number">0</span>, a4 = <span class="number">1</span>, a5 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">char</span> zhong[<span class="number">50</span>][<span class="number">20</span>]; <span class="comment">//存放分流过程中的中转数字字符串</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="keyword">original_t</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> ((*(original_string + i) == <span class="string">'0'</span>) || (*(original_string + i) == <span class="string">'1'</span>) || (*(original_string + i) == <span class="string">'2'</span>) || (*(original_string + i) == <span class="string">'3'</span>) || (*(original_string + i) == <span class="string">'4'</span>) || (*(original_string + i) == <span class="string">'5'</span>) || (*(original_string + i) == <span class="string">'6'</span>) || (*(original_string + i) == <span class="string">'7'</span>) || (*(original_string + i) == <span class="string">'8'</span>) || (*(original_string + i) == <span class="string">'9'</span>) || (*(original_string + i) == <span class="string">'.'</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			zhong[a1][a2++] = *(original_string + i);</span><br><span class="line">			a4 = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (a4 == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				number_array[a1] = atof(zhong[a1]);</span><br><span class="line">				a2 = <span class="number">0</span>;</span><br><span class="line">				mix_d[a5].d = &amp;number_array[a1++];</span><br><span class="line">				mix_d[a5++].type = Data;</span><br><span class="line">				a4 = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			char_array[a3] = *(original_string + i);</span><br><span class="line">			mix_d[a5].d = &amp;char_array[a3++];</span><br><span class="line">			mix_d[a5++].type = Symbol;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="处理负数"><a href="#处理负数" class="headerlink" title="处理负数"></a>处理负数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">negative</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="keyword">orginal_mix_t</span> - <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (((*(<span class="keyword">char</span> *)mix_d[i].d) == <span class="string">'('</span>) &amp;&amp; ((*(<span class="keyword">char</span> *)mix_d[i + <span class="number">3</span>].d) == <span class="string">')'</span>) &amp;&amp; (mix_d[i].type == Symbol) &amp;&amp; (mix_d[i + <span class="number">3</span>].type == Symbol))</span><br><span class="line">		&#123;</span><br><span class="line">			*(<span class="keyword">long</span> <span class="keyword">double</span> *)mix_d[i + <span class="number">2</span>].d = (*(<span class="keyword">long</span> <span class="keyword">double</span> *)mix_d[i + <span class="number">2</span>].d) * (<span class="number">-1</span>);</span><br><span class="line">			clean(i - <span class="number">1</span>, i + <span class="number">1</span>, mix_d);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="中缀表达式转后缀表达式"><a href="#中缀表达式转后缀表达式" class="headerlink" title="中缀表达式转后缀表达式"></a>中缀表达式转后缀表达式</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">to_suffix</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="keyword">orginal_mix_t</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (mix_d[i].type == Data)</span><br><span class="line">		&#123;</span><br><span class="line">			suffix[top++] = mix_d[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (mix_d[i].type == Symbol)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (middle[<span class="number">0</span>] == <span class="number">0x00000000</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				middle[top_m] = (<span class="keyword">char</span> *)mix_d[i].d;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">'('</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				middle[++top_m] = (<span class="keyword">char</span> *)mix_d[i].d;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">')'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">while</span> ((top_m &gt;= <span class="number">0</span>) &amp;&amp; (*(<span class="keyword">char</span> *)middle[top_m] != <span class="string">'('</span>))</span><br><span class="line">				&#123;</span><br><span class="line">					suffix[top].d = middle[top_m];</span><br><span class="line">					suffix[top++].type = Symbol;</span><br><span class="line">					top_m--;</span><br><span class="line">				&#125;</span><br><span class="line">				top_m--;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> ((*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">'*'</span>) || (*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">'/'</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">while</span> ((top_m &gt;= <span class="number">0</span>) &amp;&amp; (((top_m &gt;= <span class="number">0</span>) &amp;&amp; *(<span class="keyword">char</span> *)middle[top_m] == <span class="string">'/'</span>) || (*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">'*'</span>)))</span><br><span class="line">				&#123;</span><br><span class="line">					suffix[top].d = middle[top_m--];</span><br><span class="line">					suffix[top++].type = Symbol;</span><br><span class="line">				&#125;</span><br><span class="line">				middle[++top_m] = (<span class="keyword">char</span> *)mix_d[i].d;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> ((*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">'+'</span>) || (*(<span class="keyword">char</span> *)mix_d[i].d == <span class="string">'-'</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">while</span> ((top_m &gt;= <span class="number">0</span>) &amp;&amp; ((*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">'/'</span>) || (*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">'*'</span>) || (*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">'+'</span>) || (*(<span class="keyword">char</span> *)middle[top_m] == <span class="string">'-'</span>)))</span><br><span class="line">				&#123;</span><br><span class="line">					suffix[top].d = middle[top_m--];</span><br><span class="line">					suffix[top++].type = Symbol;</span><br><span class="line">				&#125;</span><br><span class="line">				middle[++top_m] = (<span class="keyword">char</span> *)mix_d[i].d;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (top_m &gt;= <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		suffix[top].d = middle[top_m--];</span><br><span class="line">		suffix[top++].type = Symbol;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="主计算函数"><a href="#主计算函数" class="headerlink" title="主计算函数"></a>主计算函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">double</span> <span class="title">main_num</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="keyword">orginal_mix_t</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((suffix[i].type == Symbol) &amp;&amp; i &gt;= <span class="number">2</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d = num(i);</span><br><span class="line">			clean(i - <span class="number">2</span>, i, suffix);</span><br><span class="line">			i = i - <span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> *(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[<span class="number">0</span>].d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">double</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">switch</span> (*(<span class="keyword">char</span> *)suffix[i].d)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">		<span class="keyword">return</span> ((*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d) * (*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">1</span>].d));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">		<span class="keyword">return</span> ((*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d) - (*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">1</span>].d));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">		<span class="keyword">return</span> ((*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d) + (*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">1</span>].d));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">		<span class="keyword">return</span> ((*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">2</span>].d) / (*(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[i - <span class="number">1</span>].d));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\n结果是：%lf\n"</span>, *(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[<span class="number">0</span>].d);</span><br></pre></td></tr></table></figure>

<h3 id="初始化数据并循环"><a href="#初始化数据并循环" class="headerlink" title="初始化数据并循环"></a>初始化数据并循环</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean_all</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(original_string, <span class="number">0x00</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span>) * MAX);</span><br><span class="line">	<span class="built_in">memset</span>(char_array, <span class="number">0x00</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span>) * MAX2);</span><br><span class="line">	<span class="built_in">memset</span>(number_array, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">double</span>) * MAX2);</span><br><span class="line">	<span class="built_in">memset</span>(middle, <span class="number">0x00000000</span>, <span class="keyword">sizeof</span>(<span class="keyword">char</span> *) * MAX2);</span><br><span class="line">	<span class="built_in">memset</span>(mix_d-&gt;d, <span class="number">0x000000000</span>, <span class="keyword">sizeof</span>(<span class="keyword">void</span> *) * MAX2);</span><br><span class="line">	<span class="built_in">memset</span>(suffix-&gt;d, <span class="number">0x000000000</span>, <span class="keyword">sizeof</span>(<span class="keyword">void</span> *) * MAX2);</span><br><span class="line">	<span class="keyword">orginal_mix_t</span> = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">original_t</span> = <span class="number">0</span>;</span><br><span class="line">	top = <span class="number">0</span>;</span><br><span class="line">	top_m = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="主main函数"><a href="#主main函数" class="headerlink" title="主main函数"></a>主<code>main</code>函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"四则表达式计算器\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"请键入一个算式（支持四则混合运算和带括号运算）：\n"</span>);</span><br><span class="line">		gets(original_string);</span><br><span class="line">		<span class="keyword">if</span> (judge())</span><br><span class="line">		&#123;</span><br><span class="line">			clean_all();</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		dispose_long();</span><br><span class="line">		transform();</span><br><span class="line">		negative();</span><br><span class="line">		to_suffix();</span><br><span class="line">		main_num();</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n结果是：%lf\n"</span>, *(<span class="keyword">long</span> <span class="keyword">double</span> *)suffix[<span class="number">0</span>].d);</span><br><span class="line">		clean_all();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="程序效果"><a href="#程序效果" class="headerlink" title="程序效果"></a>程序效果</h2><p>程序的结果：</p>
<p><img src="/file/pic/c_four_arithmetic/c_four_arithmetic-1.PNG" alt="c_four_arithmetic-1"></p>
<hr>
<p>网页<a href="https://zh.numberempire.com/expressioncalculator.php" target="_blank" rel="noopener"><code>表达式计算器</code></a>的结果：</p>
<p><img src="/file/pic/c_four_arithmetic/c_four_arithmetic-2.PNG" alt="c_four_arithmetic-1"></p>
<h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p><a href="/file/document/c_four_arithmetic-ZZT.7z">四则表达式运算源码和程序下载</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">名称: c_four_arithmetic-ZZT.7z</span><br><span class="line">大小: 13615 字节 (13 KiB)</span><br><span class="line"></span><br><span class="line">CRC32: 66526331</span><br><span class="line">CRC64: 97A40258714385B9</span><br><span class="line">SHA256: C43CEFB0BC74B4FEECD8CAF48D9FA0476E5DB44CD72816CEF11C2801F856D35F</span><br><span class="line">SHA1: B461438F0CC371F57616E6D8FED4B6B87D62E3A9</span><br><span class="line">BLAKE2sp: 745A98E9AF301AA0FAF041D61765002CC0D30F98736015EC9EE45BBF3F6ADBD6</span><br><span class="line"></span><br><span class="line">解压密码: ZZTTZZ</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>毕竟是初学C语言，对C的掌握和熟悉还是不够。看了看网上大佬的代码，觉得我进步的空间还很大。</p>
]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
      <tags>
        <tag>C语言学习</tag>
        <tag>C</tag>
        <tag>四则计算器</tag>
        <tag>表达式运算</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习-后缀表达式</title>
    <url>/blog/posts/64376614.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>后缀表达式又称为逆波兰式或逆波兰记法，是一种把运算符写在操作符之后的表达式。</p>
<h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><p>后缀表达式在计算机看来却是比较简单易懂的结构。因为计算机普遍采用的内存结构是栈式结构，它执行先进后出的顺序。</p>
<h2 id="中缀表达式转后缀表达式"><a href="#中缀表达式转后缀表达式" class="headerlink" title="中缀表达式转后缀表达式"></a>中缀表达式转后缀表达式</h2><h3 id="算法思路"><a href="#算法思路" class="headerlink" title="算法思路"></a>算法思路</h3><p>首先需要分配<code>2个栈</code>，一个作为临时存储运算符的<code>栈S1</code>（含一个结束符号），一个作为输入后缀表达式的栈<code>S2</code>（空栈），<code>S1栈</code>可先放入优先级最低的运算符#，注意，<code>中缀式应以此最低优先级的运算符结束</code>。可指定其他字符，不一定非#不可。从中缀式的左端开始取字符，逐序进行如下步骤：</p>
<ol>
<li>若取出的字符是操作数，则分析出完整的运算数，该操作数直接送入<code>S2栈</code></li>
<li>若取出的字符是运算符，则将该运算符与S1栈栈顶元素比较，如果该运算符优先级(不包括括号运算符)大于<code>S1栈</code>栈顶运算符优先级，则将该运算符进<code>S1栈</code>，否则，将<code>S1栈</code>的栈顶运算符弹出，送入<code>S2栈</code>中，直至<code>S1栈</code>栈顶运算符低于（不包括等于）该运算符优先级，最后将该运算符送入<code>S1栈</code>。</li>
<li>若取出的字符是“（”，则直接送入<code>S1栈</code>顶。</li>
<li>若取出的字符是“）”，则将距离<code>S1栈</code>栈顶最近的“（”之间的运算符，逐个出栈，依次送入<code>S2栈</code>，此时抛弃“（”。</li>
<li>重复上面的1~4步，直至处理完所有的输入字符</li>
<li>若取出的字符是“<code>#</code>”，则将S1栈内所有运算符（不包括“<code>#</code>”），逐个出栈，依次送入<code>S2栈</code>。</li>
</ol>
<p>完成以上步骤，<code>S2栈</code>便为后缀表达式输出结果。不过<code>S2</code>应做一下逆序处理。便可以按照后缀表达式的计算方法计算了！</p>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>(a+b)*c-(a+b)/e的后缀表达式为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(a+b)*c-(a+b)&#x2F;e</span><br><span class="line">→((a+b)*c)((a+b)&#x2F;e)-</span><br><span class="line">→((a+b)c*)((a+b)e&#x2F;)-</span><br><span class="line">→(ab+c*)(ab+e&#x2F;)-</span><br><span class="line">→ab+c*ab+e&#x2F;-</span><br></pre></td></tr></table></figure>

<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>感谢百度百科。</p>
<p>引用的<a href="https://baike.baidu.com/item/%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F/128437?fromtitle=%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F&fromid=6160580&fr=aladdin" target="_blank" rel="noopener">百度百科(逆波兰式)</a></p>
]]></content>
      <categories>
        <category>C语言学习</category>
      </categories>
      <tags>
        <tag>C语言学习</tag>
        <tag>C</tag>
        <tag>后缀表达式</tag>
        <tag>表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>SSR使用教程</title>
    <url>/blog/posts/f289a5ea.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文为我多日使用SSR的经验之谈,如有错误请在下方评论区指正.</p>
<h2 id="SSR简介-个人意见"><a href="#SSR简介-个人意见" class="headerlink" title="SSR简介(个人意见)"></a>SSR简介(个人意见)</h2><p>专门用来穿透网络防火墙的软件,相比于VPN而言比较稳定,抗干扰能力强,不易被封IP(其实吧,就是流量特征没有VPN那么明显,但被封的可能性还是有的).</p>
<h2 id="下载安装SSR"><a href="#下载安装SSR" class="headerlink" title="下载安装SSR"></a>下载安装SSR</h2><h3 id="下载SSR"><a href="#下载SSR" class="headerlink" title="下载SSR"></a>下载SSR</h3><p>可在本博客找到下载页面-<a href="/posts/c9a4b42e.html">SSR工具下载</a></p>
<p>或自行百度</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>本博客下载SSR是绿色的,无需安装.</p>
<p>下载,解压,打开程序,就是这么简单</p>
<blockquote>
<p>注:若打开后提示端口已被占用,南无先把后台的SSR关掉再打开.</p>
</blockquote>
<h2 id="SSR使用"><a href="#SSR使用" class="headerlink" title="SSR使用"></a>SSR使用</h2><h3 id="添加服务器"><a href="#添加服务器" class="headerlink" title="添加服务器"></a>添加服务器</h3><p>可通过SSR链接,二维码,服务器具体参数等添加</p>
<ul>
<li>SSR链接,可从粘贴板导入</li>
</ul>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203026.png" alt="SSR"></p>
<ul>
<li>二维码扫描</li>
</ul>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203028.png" alt="SSR"></p>
<ul>
<li>键入服务器具体参数</li>
</ul>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203030.png" alt="SSR"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203032.png" alt="SSR"></p>
<h3 id="添加订阅"><a href="#添加订阅" class="headerlink" title="添加订阅"></a>添加订阅</h3><p>有些SSR服务器信息是需要从订阅链接中获取的</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203045.png" alt="SSR"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203047.png" alt="SSR"></p>
<h3 id="选择系统代理模式"><a href="#选择系统代理模式" class="headerlink" title="选择系统代理模式"></a>选择系统代理模式</h3><p>系统代理模式共有三种:</p>
<ol>
<li>直连模式</li>
<li>PAC模式</li>
<li>全局模式</li>
</ol>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203108.png" alt="SSR"></p>
<ul>
<li>直连模式</li>
</ul>
<p>顾名思义,就是直连,没有任何代理,也不可能翻墙</p>
<ul>
<li>PAC模式</li>
</ul>
<p>选择性代理模式,可以尽量做到通过代理访问外网而直连访问大陆,是我最常用的模式.</p>
<ul>
<li>全局模式</li>
</ul>
<p>电脑的所有网络访问全部走代理,打游戏时可用,也可以一定程度上可以保护你的IP,我不常用.</p>
<blockquote>
<p>注:SSR右键中的PAC需选择<code>更新PAC为绕过大陆域名常见列表</code>,代理规则需选<code>绕过局域网和大陆</code>.</p>
</blockquote>
<h3 id="服务器负载均衡"><a href="#服务器负载均衡" class="headerlink" title="服务器负载均衡"></a>服务器负载均衡</h3><p>说白了就是随机切换列表中的服务器,当你的列表的服务器比较多,而你又不知道那个好用,又没有时间挨个试的时候可以开启这个功能.</p>
<p>在SSR的选项设置中可以改变随机服务器的权重,我比较常用的是<code>下载速度优先</code>或<code>低延迟优先</code>.</p>
<blockquote>
<p>注:若科学上网有外网账号登录(如:谷歌等),最好不要开启这个功能,满世界飞的登录IP会让商家把你列入危险名单的.</p>
</blockquote>
<h3 id="选项设置"><a href="#选项设置" class="headerlink" title="选项设置"></a>选项设置</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203112.png" alt="SSR"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203114.png" alt="SSR"></p>
<blockquote>
<p>注:选项设置中我划红框的是可以修改尝试的,未划红框若没有大佬指导不建议新手尝试.</p>
</blockquote>
<h3 id="服务器监控窗口"><a href="#服务器监控窗口" class="headerlink" title="服务器监控窗口"></a>服务器监控窗口</h3><ul>
<li><p>法一:用鼠标中键点击SSR任务栏图标</p>
</li>
<li><p>法二:如图<br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203117.png" alt="SSR"></p>
</li>
</ul>
<p>效果如下:</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203119.png" alt="SSR"></p>
<h2 id="SSR的其他功能"><a href="#SSR的其他功能" class="headerlink" title="SSR的其他功能"></a>SSR的其他功能</h2><h3 id="设置客户端密码"><a href="#设置客户端密码" class="headerlink" title="设置客户端密码"></a>设置客户端密码</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203131.png" alt="SSR"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203133.png" alt="SSR"></p>
<h3 id="自定义二维码生成"><a href="#自定义二维码生成" class="headerlink" title="自定义二维码生成"></a>自定义二维码生成</h3><p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203135.png" alt="SSR"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328203137.png" alt="SSR"></p>
]]></content>
      <categories>
        <category>方法积累</category>
      </categories>
      <tags>
        <tag>SSR</tag>
        <tag>方法积累</tag>
        <tag>教程</tag>
        <tag>SSR教程</tag>
      </tags>
  </entry>
  <entry>
    <title>分享一个百度网盘高速下载神器-PanDownload</title>
    <url>/blog/posts/256134b5.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="各版本概述"><a href="#各版本概述" class="headerlink" title="各版本概述"></a>各版本概述</h2><p><code>PanDownload</code>现有电脑版(Win),手机版(Android),网页版.</p>
<p>其中,由于百度网盘的账号限速,电脑版和手机版都有一个比较明显的问题——不能再短时间(一两天之内)高速下载大量的文件(10GB左右,亲测,看天,有时会更少o(╥﹏╥)o).超过限额后会被百度网盘关进小黑屋——下载时速10B/S-30KB/S;</p>
<p>而网页版则没有上面的弊病,但每人每天是有限量的,不多,但日常下个电影完全够用,并且网页版文件是限制大小的——4GB以上就不能下载了.</p>
<p>以上就是各种版本的利弊介绍,请大家自行选择.</p>
<blockquote>
<p>注:下载及参考页面链接在文章末尾</p>
</blockquote>
<h2 id="电脑版"><a href="#电脑版" class="headerlink" title="电脑版"></a>电脑版</h2><h3 id="账号登录"><a href="#账号登录" class="headerlink" title="账号登录"></a>账号登录</h3><p>这是个废话</p>
<h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><p>我日常作死-浪<del>~</del></p>
<h3 id="打开分享链接"><a href="#打开分享链接" class="headerlink" title="打开分享链接"></a>打开分享链接</h3><p>非常好用的功能,支持粘贴板链接监控自动查询网盘提取码功能-666</p>
<h3 id="在线解压"><a href="#在线解压" class="headerlink" title="在线解压"></a>在线解压</h3><p>支持500MB在线解压,一次只能解压一个文件.不错的功能,虽然我不常用.</p>
<h3 id="离线下载"><a href="#离线下载" class="headerlink" title="离线下载"></a>离线下载</h3><p>支持http/https/ftp/磁力链接/BT种子.非常强大的功能,差点让我抛弃了迅雷.</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201623.gif" alt="PanDownload"></p>
<h3 id="新番下载"><a href="#新番下载" class="headerlink" title="新番下载"></a>新番下载</h3><p>我不看番,不知道详情,不做评价.</p>
<h3 id="远程下载"><a href="#远程下载" class="headerlink" title="远程下载"></a>远程下载</h3><p>需要开启Aria2 RPC服务的电脑或服务器甚至是手机,Aria2的配置方法大家可以上百度搜,我也会在这里更新一些教程.</p>
<h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><ul>
<li>保存路径：文件下载存储路径</li>
<li>转存目录：使用转存下载时，文件的保存路径</li>
<li>下载方式：文件下载接口，当下载速度慢时可以尝试修改此项</li>
<li>并行任务：同时下载的任务数量</li>
<li>下载速度：下载限速设置</li>
<li>最大连接：下载文件时的连接数，在无法满速下载时可以适当调大</li>
</ul>
<blockquote>
<p>注:<br>1.下载方式选项只对下载自己网盘上的文件有效果<br>2.连接数并不是越大越好，有时候可能导致下载速度更慢<br>3.修改此项时如果有任务正在下载，需要暂停再开始才会生效！</p>
</blockquote>
<h4 id="提醒"><a href="#提醒" class="headerlink" title="提醒"></a>提醒</h4><ul>
<li>检测更新：有新版本时提醒更新</li>
<li>声音提醒：下载完成时播放提醒音效</li>
</ul>
<h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul>
<li>启动设置：软件启动时如果下载列表里有任务时自动开始下载</li>
<li>文件校验：文件下载完成时校验文件完整性</li>
</ul>
<blockquote>
<p>强烈建议开启文件校验的功能,百度网盘经常出现文件损坏的情况<br>文件越大校验时间越长，请耐心等待<br>部分文件可能获取不到md5，这时不会进行校验<br>修改此项时如果有任务正在下载，需要暂停再开始才会生效！</p>
</blockquote>
<ul>
<li>监控设置：复制分享链接时自动打开</li>
<li>提取链接：提取文件下载链接时生成短链</li>
<li>休眠设置：有任务正在下载时禁止电脑自动休眠</li>
<li>关闭按钮：点击软件右上角关闭按钮时最小化到托盘或者直接退出</li>
</ul>
<h2 id="手机版"><a href="#手机版" class="headerlink" title="手机版"></a>手机版</h2><p>据作者说是处于测试状态,我也没用过,不过还是欢迎大家去尝试.</p>
<h2 id="网页版"><a href="#网页版" class="headerlink" title="网页版"></a>网页版</h2><p>非常实用,支持自动查询网盘提取码,搭配Aria2简直爽得不要不要的^-^.</p>
<h2 id="下载及参考页面链接"><a href="#下载及参考页面链接" class="headerlink" title="下载及参考页面链接"></a>下载及参考页面链接</h2><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><ul>
<li>电脑版 <a href="http://pandownload.com/2.1.2" target="_blank" rel="noopener">官网下载</a> <a href="https://www.lanzous.com/i4qyh8j" target="_blank" rel="noopener">网盘下载</a></li>
<li>安卓版 <a href="https://lv.cyh.im/20190502/118/118_uKLe2Dyd_pandownload_108_2_release.apk" target="_blank" rel="noopener">官网下载</a> <a href="https://yunpan.360.cn/surl_yLJFg7FSuy2" target="_blank" rel="noopener">网盘下载</a></li>
<li>网页版 <a href="https://www.baiduwp.com/" target="_blank" rel="noopener">没下载链接(滑稽)</a></li>
</ul>
<h2 id="参考页面链接"><a href="#参考页面链接" class="headerlink" title="参考页面链接"></a>参考页面链接</h2><ul>
<li><a href="http://pandownload.com" target="_blank" rel="noopener">PanDownload(电脑版)官网</a></li>
<li><a href="http://android.pandownload.com/" target="_blank" rel="noopener">PanDownload安卓版官网</a></li>
<li><a href="https://www.baiduwp.com/" target="_blank" rel="noopener">PanDownload网页版官网</a></li>
<li><a href="https://www.baiduwp.com/donate" target="_blank" rel="noopener">PanDownload支持作者链接</a></li>
<li><a href="http://pandownload.com/faq/about.html" target="_blank" rel="noopener">PanDownload交流反馈</a></li>
</ul>
<blockquote>
<p>PanDownload的作者做这些东西不容易,还望大家多多支持.</p>
</blockquote>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>工具分享</tag>
        <tag>PanDownload</tag>
        <tag>百度网盘</tag>
        <tag>高速下载</tag>
        <tag>下载</tag>
        <tag>百度网盘高速下载</tag>
      </tags>
  </entry>
  <entry>
    <title>大学入学所需物品</title>
    <url>/blog/posts/2b390275.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="证件和档案-非常重要"><a href="#证件和档案-非常重要" class="headerlink" title="证件和档案-非常重要"></a><strong>证件和档案-非常重要</strong></h2><ul>
<li>录取通知书</li>
<li>高考准考证</li>
<li>档案袋</li>
<li>成绩单</li>
<li>户口本复印件(3套)</li>
<li>身份证正反两面复印件(5套)</li>
<li>一寸登记照两版(有条件可以不同尺寸多照几版,主要是为了方便)</li>
<li>团员档案袋</li>
</ul>
<h2 id="物品-视情况而定"><a href="#物品-视情况而定" class="headerlink" title="物品-视情况而定"></a><strong>物品-视情况而定</strong></h2><ul>
<li>牙膏,牙刷,漱口杯</li>
<li>蚊帐(看录取通知书上说学校给不给配)</li>
<li>毛巾(两个或多个)</li>
<li>各类被子,枕头(看录取通知书上说学校给不给配)</li>
<li>挂钩(一版,学校小卖部应该也有卖的,主要为了方便)</li>
<li>洗发水</li>
<li>搓澡巾</li>
<li>剃须刀</li>
<li>脸盆(3个)</li>
<li>大号保温杯+小号保温杯</li>
<li>香皂</li>
<li>洗衣粉</li>
<li>樟脑球</li>
<li>多个塑料带(装东西方便)</li>
<li>水果刀</li>
<li>勺子,筷子,饭盒</li>
<li>当地的详细地图(可用手机代替)</li>
<li>笔,橡皮檫,U盘,小笔记本,适量笔记本</li>
<li>手表</li>
<li>透明胶,502</li>
<li>小型药箱(白加黑,藿香正气,红花油,云南白药等)</li>
</ul>
<blockquote>
<p>注：以上仅仅为参考,实际需结合录取通知书和学校的资料以及自身的情况而定.</p>
</blockquote>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>大学</tag>
        <tag>大一</tag>
        <tag>所需物品</tag>
        <tag>大一入学所需物品</tag>
      </tags>
  </entry>
  <entry>
    <title>YouTube下载1080教程</title>
    <url>/blog/posts/2afe2096.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<ul>
<li>本教程原理：是利用在线视频转换网站来解析YouTube视频地址,从而实现下载1080p视频的目的.</li>
</ul>
<h2 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h2><p>翻墙打开网址：<a href="https://www.converto.io/" target="_blank" rel="noopener">https://www.converto.io/</a></p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202937.PNG" alt="YouTube下载1080教程"></p>
<p>将YouTube的视频网址填入上边的文本框中</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202941.PNG" alt="YouTube下载1080教程"></p>
<p>先点击右上角的<code>齿轮</code>图标,打开设置</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202946.PNG" alt="YouTube下载1080教程"></p>
<p>选择你想要的格式,鉴于本文目的,选择1080p.</p>
<p>然后点击<code>save</code>按钮保存,最后点击<code>Convert</code>按钮开始下载</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202950.PNG" alt="YouTube下载1080教程"></p>
<h2 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h2><p>翻墙打开网址：<a href="https://y2mate.com/" target="_blank" rel="noopener">https://y2mate.com/</a></p>
<p>填入YouTube链接,点击<code>Start</code>按钮,选择你想要的格式下载</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202959.PNG" alt="YouTube下载1080教程"></p>
<blockquote>
<p>本文转载自：<a href="https://github.com/Alvin9999/new-pac/wiki/YouTube下载1080教程" target="_blank" rel="noopener">https://github.com/Alvin9999/new-pac/wiki/YouTube下载1080教程</a></p>
</blockquote>
]]></content>
      <categories>
        <category>方法积累</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>YouTube</tag>
        <tag>下载1080</tag>
        <tag>YouTube下载1080</tag>
      </tags>
  </entry>
  <entry>
    <title>分享-翻墙浏览器整合版</title>
    <url>/blog/posts/bf1a7f8f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p><strong>永久免费.不用安装,无需设置,解压后使用.稳定、流畅、高速,长期更新.</strong></p>
<h2 id="谷歌浏览器高内核整合版-适合Win7-8-10"><a href="#谷歌浏览器高内核整合版-适合Win7-8-10" class="headerlink" title="谷歌浏览器高内核整合版(适合Win7,8,10)"></a><strong>谷歌浏览器高内核整合版<code>(适合Win7,8,10)</code></strong></h2><p><em>内存<code>大于2G</code>可选</em></p>
<p>包含Goflyway版、Trojan版、Brook版、v2ray版、SSR版、WuJie版、FreeGate版、赛风版、SkyZip版.</p>
<p>可以满足大部分的上网需求</p>
<blockquote>
<p>注：国内各地区各线路对各种翻墙软件的封锁能力不同,请自行选择.</p>
</blockquote>
<p>使用方法：下载后解压,按 <strong>使用说明(<code>必看</code>)</strong> 操作即可.</p>
<p><a href="https://github.com/Alvin9999/new-pac/wiki/高内核版" target="_blank" rel="noopener">全部版本链接：https://github.com/Alvin9999/new-pac/wiki/高内核版</a></p>
<h2 id="火狐浏览器高内核整合版-适合XP-Win7-8-10"><a href="#火狐浏览器高内核整合版-适合XP-Win7-8-10" class="headerlink" title="火狐浏览器高内核整合版(适合XP,Win7,8,10)"></a><strong>火狐浏览器高内核整合版<code>(适合XP,Win7,8,10)</code></strong></h2><p><em>内存<code>小于2G</code>需选</em></p>
<p>包含Goflyway版、Trojan版、Brook版、v2ray版、SSR版、WuJie版、FreeGate版、赛风版、SkyZip版.</p>
<p>可以满足大部分的上网需求</p>
<blockquote>
<p>注：国内各地区各线路对各种翻墙软件的封锁能力不同,请自行选择.</p>
</blockquote>
<p><a href="https://github.com/Alvin9999/new-pac/wiki/火狐翻墙浏览器" target="_blank" rel="noopener">全部版本链接：https://github.com/Alvin9999/new-pac/wiki/火狐翻墙浏览器</a></p>
<blockquote>
<p>注：电脑上需要安装用于火狐浏览器的flash播放器才可以看网页视频.FlashPlayer最新版离线安装程序官网下载地址： <a href="http://fpdownload.macromedia.com/pub/flashplayer/latest/help/install_flash_player.exe" target="_blank" rel="noopener">http://fpdownload.macromedia.com/pub/flashplayer/latest/help/install_flash_player.exe</a> (如果哪天浏览器提醒你要更新flash插件,还是用此下载地址下载即可,这是官方的地址,会自动更新)</p>
</blockquote>
<h2 id="官方网址"><a href="#官方网址" class="headerlink" title="官方网址"></a><strong>官方网址</strong></h2><blockquote>
<p>注：访问官网有惊喜哦！</p>
</blockquote>
<p><a href="https://github.com/Alvin9999/new-pac/wiki" target="_blank" rel="noopener">官网地址：https://github.com/Alvin9999/new-pac/wiki</a></p>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>工具分享</tag>
        <tag>科学上网</tag>
        <tag>翻墙</tag>
        <tag>浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>Cencrack在线工具包</title>
    <url>/blog/posts/9bb596ae.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201852.gif" alt="演示"></p>
<p>2.5M大小,多达五百多个常用(非常用)工具.</p>
<p>最新版各种优化,未下载的软件变成了黑白图标,不论是下载速度,还是大文件的超速下载,都堪称一绝,欢迎下载体验!</p>
<p>出现未联网、(获取版本信息失败)等网络问题,请把防火墙关掉,或者信任程序联网！</p>
<p>看看你的网络环境是否能访问 <a href="http://a.cencrack.com:88/tools/" target="_blank" rel="noopener">http://a.cencrack.com:88/tools/</a>,如果不能访问则无法下载里面大部分工具.</p>
<hr>
<p>注意：若出现以下错误：</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201847.jpg" alt="错误"></p>
<ol>
<li>打开：控制版面</li>
<li>找到：程序和功能</li>
<li>打开“打开或关闭Windows功能”</li>
<li>找到并点开“旧版组件”选项</li>
<li>勾选“DirectPlay”后确定</li>
</ol>
<blockquote>
<p>如果win10启动或关闭Windows功能 内 无启用旧版功能.可以看下Legacy Components,这个里面有DirectPlay,把他勾选了就可以！</p>
<p>总之就是要找到 DirectPlay 这个功能把它开启!.</p>
<p>win8 或者 win10系统 才会可能出现此错误,请按照以上方法解决,如果无效请百度一下另外方法.</p>
</blockquote>
<hr>
<ul>
<li><p><a href="http://a.cencrack.com:88/tools/tool/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97.txt" target="_blank" rel="noopener">点击查看–&gt;&gt;&gt;更新日志</a></p>
</li>
<li><p><a href="http://a.cencrack.com:88/tools/tool/" target="_blank" rel="noopener">点击查看–&gt;&gt;&gt;文件列表</a></p>
</li>
</ul>
<hr>
<p>本文转载自<a href="http://cencrack.com/" target="_blank" rel="noopener">cencrack 的个人博客</a></p>
<p>此文链接<a href="http://cencrack.com/?post=18" target="_blank" rel="noopener">Cencrack在线工具包</a></p>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>工具分享</tag>
        <tag>Cencrack</tag>
        <tag>工具包</tag>
        <tag>在线工具包</tag>
      </tags>
  </entry>
  <entry>
    <title>centos下无损将home分区的一部分调整到根目录</title>
    <url>/blog/posts/697532ae.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="检查自己的系统信息"><a href="#检查自己的系统信息" class="headerlink" title="检查自己的系统信息"></a>检查自己的系统信息</h2><p>键入命令<code>cat /etc/os-release</code></p>
<p>我的机器输出如下,系统为<code>CentOS Linux 7 (Core)</code>版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/os-release</span></span><br><span class="line">NAME=<span class="string">"CentOS Linux"</span></span><br><span class="line">VERSION=<span class="string">"7 (Core)"</span></span><br><span class="line">ID=<span class="string">"centos"</span></span><br><span class="line">ID_LIKE=<span class="string">"rhel fedora"</span></span><br><span class="line">VERSION_ID=<span class="string">"7"</span></span><br><span class="line">PRETTY_NAME=<span class="string">"CentOS Linux 7 (Core)"</span></span><br><span class="line">ANSI_COLOR=<span class="string">"0;31"</span></span><br><span class="line">CPE_NAME=<span class="string">"cpe:/o:centos:centos:7"</span></span><br><span class="line">HOME_URL=<span class="string">"https://www.centos.org/"</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">"https://bugs.centos.org/"</span></span><br><span class="line"></span><br><span class="line">CENTOS_MANTISBT_PROJECT=<span class="string">"CentOS-7"</span></span><br><span class="line">CENTOS_MANTISBT_PROJECT_VERSION=<span class="string">"7"</span></span><br><span class="line">REDHAT_SUPPORT_PRODUCT=<span class="string">"centos"</span></span><br><span class="line">REDHAT_SUPPORT_PRODUCT_VERSION=<span class="string">"7"</span></span><br></pre></td></tr></table></figure>

<h2 id="检查文件系统"><a href="#检查文件系统" class="headerlink" title="检查文件系统"></a>检查文件系统</h2><p>键入命令<code>blkid</code></p>
<p>我的机器输出如下,要操作的分区的文件系统为<code>XFS</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># blkid</span></span><br><span class="line">/dev/sda1: UUID=<span class="string">"ce72430c-9e09-4690-8978-9213c9629eff"</span> TYPE=<span class="string">"xfs"</span> </span><br><span class="line">/dev/sda2: UUID=<span class="string">"CYwKKV-nnCq-HgHq-2NeY-dduO-5CCU-OSVLBj"</span> TYPE=<span class="string">"LVM2_member"</span> </span><br><span class="line">/dev/mapper/centos-root: UUID=<span class="string">"ffd8209f-8c66-44f8-8d59-0a20a64f73fc"</span> TYPE=<span class="string">"xfs"</span> </span><br><span class="line">/dev/mapper/centos-swap: UUID=<span class="string">"41361166-a5fb-4162-b748-c41176fcf470"</span> TYPE=<span class="string">"swap"</span> </span><br><span class="line">/dev/mapper/centos-home: UUID=<span class="string">"65be852f-defe-433c-8acc-8c696f29d645"</span> TYPE=<span class="string">"xfs"</span></span><br></pre></td></tr></table></figure>

<h2 id="检查分区详细情况"><a href="#检查分区详细情况" class="headerlink" title="检查分区详细情况"></a>检查分区详细情况</h2><h3 id="查看分区的情况"><a href="#查看分区的情况" class="headerlink" title="查看分区的情况"></a>查看分区的情况</h3><p>键入命令<code>df -h</code></p>
<p>输出示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># df -h</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root   50G   15G   36G  30% /</span><br><span class="line">devtmpfs                 1.8G     0  1.8G   0% /dev</span><br><span class="line">tmpfs                    1.8G  4.0K  1.8G   1% /dev/shm</span><br><span class="line">tmpfs                    1.8G  8.9M  1.8G   1% /run</span><br><span class="line">tmpfs                    1.8G     0  1.8G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-home  244G  3.8G  240G   2% /home</span><br><span class="line">/dev/sda1               1014M  199M  816M  20% /boot</span><br><span class="line">tmpfs                    366M     0  366M   0% /run/user/0</span><br></pre></td></tr></table></figure>

<h3 id="查看各分区的信息"><a href="#查看各分区的信息" class="headerlink" title="查看各分区的信息"></a>查看各分区的信息</h3><p>键入命令<code>lvdisplay</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvdisplay</span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/swap</span><br><span class="line">  LV Name                swap</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                dXi6Yj-oQXb-coEQ-8oSK-2AHd-chQy-ZvBh4f</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2019-06-15 07:26:39 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 2</span></span><br><span class="line">  LV Size                3.75 GiB</span><br><span class="line">  Current LE             960</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     256</span><br><span class="line">  Block device           253:1</span><br><span class="line">   </span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/home</span><br><span class="line">  LV Name                home</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                qYLnrr-DExG-yMnm-6l6G-rgKF-Hvla-MnfSpF</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2019-06-15 07:26:39 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                243.33 GiB</span><br><span class="line">  Current LE             62293</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     256</span><br><span class="line">  Block device           253:2</span><br><span class="line">   </span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/root</span><br><span class="line">  LV Name                root</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                S8Gleq-e8t6-XIe1-wlRD-psfD-KUJw-bgWfdL</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2019-06-15 07:26:42 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                50.00 GiB</span><br><span class="line">  Current LE             12800</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     256</span><br><span class="line">  Block device           253:0</span><br></pre></td></tr></table></figure>

<h2 id="开始分区"><a href="#开始分区" class="headerlink" title="开始分区"></a>开始分区</h2><h3 id="减少home分区的空间"><a href="#减少home分区的空间" class="headerlink" title="减少home分区的空间"></a>减少<code>home</code>分区的空间</h3><p>键入命令使<code>home</code>分区空间为50GB</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvreduce -L 50G /dev/mapper/centos-home</span></span><br><span class="line">  WARNING: Reducing active and open logical volume to 50.00 GiB.</span><br><span class="line">  THIS MAY DESTROY YOUR DATA (filesystem etc.)</span><br><span class="line">Do you really want to reduce centos/home? [y/n]: y</span><br><span class="line">  Size of logical volume centos/home changed from 243.33 GiB (62293 extents) to 50.00 GiB (12800 extents).</span><br><span class="line">  Logical volume centos/home successfully resized.</span><br></pre></td></tr></table></figure>

<h3 id="增加root分区的空间"><a href="#增加root分区的空间" class="headerlink" title="增加root分区的空间"></a>增加<code>root</code>分区的空间</h3><p>键入命令使当前所有的空闲分区全部加载到<code>root</code>分区中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvextend -l +100%FREE /dev/mapper/centos-root</span></span><br><span class="line">  Size of logical volume centos/root changed from 50.00 GiB (12800 extents) to &lt;243.34 GiB (62294 extents).</span><br><span class="line">  Logical volume centos/root successfully resized.</span><br></pre></td></tr></table></figure>

<h3 id="扩展XFS文件空间大小"><a href="#扩展XFS文件空间大小" class="headerlink" title="扩展XFS文件空间大小"></a>扩展XFS文件空间大小</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># xfs_growfs /dev/centos/root</span></span><br><span class="line">meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=3276800 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=13107200, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=6400, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 13107200 to 63789056</span><br></pre></td></tr></table></figure>

<h2 id="格式化home分区"><a href="#格式化home分区" class="headerlink" title="格式化home分区"></a>格式化<code>home</code>分区</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs.xfs /dev/mapper/centos-home</span></span><br><span class="line">[root@localhost ~]<span class="comment"># umount /home</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mount /home</span></span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>本文参考自：<a href="http://www.cuwww.com/help/detail-78.html" target="_blank" rel="noopener">中国U网-CentOS Linux如何无损调整分区大小(XFS文件系统)</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>home分区</tag>
        <tag>容量调整</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>本博客使用的随机图片接口</title>
    <url>/blog/posts/937e33b3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>废话不多说,直接放链接</p>
<ul>
<li><p><a href="https://img.xjh.me/random_img.php?type=bg&amp;ctype=nature&amp;return=302" target="_blank" rel="noopener">https://img.xjh.me/random_img.php?type=bg&amp;ctype=nature&amp;return=302</a> (早期使用,现已不用)</p>
</li>
<li><p><a href="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" target="_blank" rel="noopener">https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture</a> (现在使用中,必应图片)</p>
</li>
</ul>
]]></content>
      <categories>
        <category>建站相关</category>
      </categories>
      <tags>
        <tag>随机图片</tag>
        <tag>接口</tag>
        <tag>随机图片接口</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下SSR服务器端搭建</title>
    <url>/blog/posts/38ecf877.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="引文"><a href="#引文" class="headerlink" title="引文"></a>引文</h2><p>如题,本文终点讲解如何在linux系统下搭建一个你自己的SSR服务器端</p>
<h2 id="搭建SSR硬件要求"><a href="#搭建SSR硬件要求" class="headerlink" title="搭建SSR硬件要求"></a>搭建SSR硬件要求</h2><p>你需要一台国外的,ip没有被墙的VPS,如果你的SSH能连上就代表VPS没有被完全地墙了.</p>
<h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><h3 id="用你的SSH工具链接VPS-键入如下一键安装代码："><a href="#用你的SSH工具链接VPS-键入如下一键安装代码：" class="headerlink" title="用你的SSH工具链接VPS,键入如下一键安装代码："></a>用你的SSH工具链接VPS,键入如下一键安装代码：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 这是安装wget的命令</span><br><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line"># 这是安装SSR脚本的命令</span><br><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;softs.fun&#x2F;Bash&#x2F;ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure>

<p>以下为备用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 这是安装wget的命令</span><br><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line"># 这是安装SSR脚本的命令</span><br><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ToyoDAdoubiBackup&#x2F;doubi&#x2F;master&#x2F;ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure>

<h3 id="安装SSR"><a href="#安装SSR" class="headerlink" title="安装SSR"></a>安装SSR</h3><p>完成上步后你会看到如下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  ShadowsocksR 一键管理脚本 [v2.0.38]</span><br><span class="line">  ---- Toyo | doub.io&#x2F;ss-jc42 ----</span><br><span class="line"></span><br><span class="line">  1. 安装 ShadowsocksR</span><br><span class="line">  2. 更新 ShadowsocksR</span><br><span class="line">  3. 卸载 ShadowsocksR</span><br><span class="line">  4. 安装 libsodium(chacha20)</span><br><span class="line">————————————</span><br><span class="line">  5. 查看 账号信息</span><br><span class="line">  6. 显示 连接信息</span><br><span class="line">  7. 设置 用户配置</span><br><span class="line">  8. 手动 修改配置</span><br><span class="line">  9. 切换 端口模式</span><br><span class="line">————————————</span><br><span class="line"> 10. 启动 ShadowsocksR</span><br><span class="line"> 11. 停止 ShadowsocksR</span><br><span class="line"> 12. 重启 ShadowsocksR</span><br><span class="line"> 13. 查看 ShadowsocksR 日志</span><br><span class="line">————————————</span><br><span class="line"> 14. 其他功能</span><br><span class="line"> 15. 升级脚本</span><br></pre></td></tr></table></figure>

<p>输入<code>1</code>,按下回车,之后跟着默认走就可以了.</p>
<blockquote>
<p>此脚本部署后SSR为开机自启,就不必去设置开机自启了.</p>
</blockquote>
<h2 id="配置BBR加速"><a href="#配置BBR加速" class="headerlink" title="配置BBR加速"></a>配置BBR加速</h2><blockquote>
<p><strong>注：此BBR一键脚本我只在Centos系统安装成功了,其他系统我未曾尝试</strong></p>
</blockquote>
<p>谷歌BBR加速,加速后对速度的提升很明显,所以推荐部署加速脚本.该加速方法也是开机自动启动,部署一次就可以了.</p>
<p>在SSH客户端加入如下指令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line"></span><br><span class="line">chmod +x bbr.sh</span><br><span class="line"></span><br><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure>

<p>然后跟着提示走,最后会确认重启机器,跟着脚本走就行了.</p>
<p>至此,SSR服务器端搭建完毕,祝你用的愉快.</p>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>工具分享</tag>
        <tag>Linux</tag>
        <tag>SSR</tag>
        <tag>SSR服务器搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>SSR工具下载</title>
    <url>/blog/posts/c9a4b42e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>其实SSR已经换了好几个作者了(继承者吧),非常感谢他们对SSR做出的努力.</p>
<p>废话不多说,在这里我放出SSR的下载链接.</p>
<table>
<thead>
<tr>
<th>软件</th>
<th>版本</th>
<th>下载</th>
</tr>
</thead>
<tbody><tr>
<td>ssr</td>
<td>Windows</td>
<td><a href="https://github.com/shadowsocksrr/shadowsocksr-csharp/releases" target="_blank" rel="noopener">下载链接</a></td>
</tr>
<tr>
<td>ssr</td>
<td>Android</td>
<td><a href="https://github.com/shadowsocksrr/shadowsocksr-android/releases" target="_blank" rel="noopener">下载链接</a></td>
</tr>
<tr>
<td>ShadowsocksX-NG-R</td>
<td>MAC</td>
<td><a href="https://github.com/qinyuhang/ShadowsocksX-NG-R/releases" target="_blank" rel="noopener">下载链接</a></td>
</tr>
</tbody></table>
<p>希望大家用的愉快.</p>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>工具分享</tag>
        <tag>SSR</tag>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>高中毕业生登记表自我鉴定范文</title>
    <url>/blog/posts/da7d27de.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>范文如下：</p>
<p>本人思想端正,能吃苦耐劳,有崇高的理想和伟大的目标,注重个人道德修养,养成良好的生活作风,乐于助人,关心国家大事.</p>
<p>在校期间,本人一直勤奋学习,刻苦钻研,通过系统地学习掌握较为扎实的基础知识.由于有良好的学习作风和明确的学习目标,曾获得“优秀学生”、“三好学生”等荣誉,得到了老师及同学们的肯定,树立了良好的学习榜样.</p>
<p>在课余时间,本人积极参加体育锻炼,增强身体素质,也热爱劳动,积极参加校开展的各项文体活动,参加社会实践,继承和发扬了艰苦奋斗的精神,也参加了校文学社和书法协会,丰富了课余生活,使自己在各方面都得到了相应的提高.</p>
<p>＂宝剑锋从磨砺出,梅花香自苦寒来＂,本人坚信通过不断地学习和努力,使自己成为一个有理想、有道德、有文化、有纪律的学生,以优异的成绩迎接挑战,为社会主义建设贡献我毕生的力量.</p>
<blockquote>
<p>资源源自度娘.</p>
</blockquote>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>高三</tag>
        <tag>自我鉴定范文</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-next配置点击爆炸效果</title>
    <url>/blog/posts/6864067c.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<h2 id="next主题文件的配置"><a href="#next主题文件的配置" class="headerlink" title="next主题文件的配置"></a><strong>next主题文件的配置</strong></h2><p>打开next主题文件,定位到以下代码区：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line"><span class="attr">fireworks:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>将<code>fireworks</code>改为<code>true</code>,如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line"><span class="attr">fireworks:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>效果可见本博客的点击效果</p>
<h2 id="配置时遇到的坑"><a href="#配置时遇到的坑" class="headerlink" title="配置时遇到的坑"></a><strong>配置时遇到的坑</strong></h2><p>有些版本的next对这个特效的默认引用地址在<code>./js/忘了/fireworks.js</code>,但是呢,这个特效文件他在这个位置：<code>./js/fireworks.js</code></p>
<p>对于这个问题可以再文件<code>_layout.swig</code>中修复</p>
<p>并且因为本博客的存放位置原因，所以只能写死链接：<code>https://zzttzz.gitee.io/blog/js/fireworks.js</code></p>
<blockquote>
<p><code>_layout.swig</code>文件在next主题文件夹下的<code>layout</code>文件夹下</p>
</blockquote>
<p>定位到如下代码区：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.fireworks %&#125;</span><br><span class="line">   &lt;canvas <span class="class"><span class="keyword">class</span>="<span class="title">fireworks</span>" <span class="title">style</span>="<span class="title">position</span>:</span> fixed;left: <span class="number">0</span>;top: <span class="number">0</span>;z-index: <span class="number">1</span>; pointer-events: none;<span class="string">" &gt;&lt;/canvas&gt; </span></span><br><span class="line"><span class="string">   &lt;script type="</span>text/javascript<span class="string">" src="</span><span class="comment">//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; </span></span><br><span class="line">   &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/忘了/fireworks.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>修改为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.fireworks %&#125;</span><br><span class="line">   &lt;canvas <span class="class"><span class="keyword">class</span>="<span class="title">fireworks</span>" <span class="title">style</span>="<span class="title">position</span>:</span> fixed;left: <span class="number">0</span>;top: <span class="number">0</span>;z-index: <span class="number">1</span>; pointer-events: none;<span class="string">" &gt;&lt;/canvas&gt; </span></span><br><span class="line"><span class="string">   &lt;script type="</span>text/javascript<span class="string">" src="</span><span class="comment">//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; </span></span><br><span class="line">   &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//zzttzz.gitee.io/blog/js/fireworks.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>便可</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>点击爆炸效果</tag>
        <tag>点击爆炸</tag>
        <tag>爆炸效果</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-next上传到自己的服务器后font-awesome图标无法显示的解决办法</title>
    <url>/blog/posts/193d509e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<blockquote>
<p>踩过的坑o(╥﹏╥)o,方法亲测有效.</p>
</blockquote>
<h1 id="法一-推荐"><a href="#法一-推荐" class="headerlink" title="法一(推荐)"></a><strong>法一(推荐)</strong></h1><h2 id="下载最新的Font-Awesome文件"><a href="#下载最新的Font-Awesome文件" class="headerlink" title="下载最新的Font Awesome文件"></a>下载最新的Font Awesome文件</h2><p><a href="http://www.fontawesome.com.cn" target="_blank" rel="noopener">Font Awesome中文网</a></p>
<p>将下载下来的文件解压,拷贝到<code>\themes\hexo-theme-next-master\source\lib\font-awesome</code>目录中.切记,完全拷贝,不差这点空间和流量.</p>
<h2 id="修改next配置文件"><a href="#修改next配置文件" class="headerlink" title="修改next配置文件"></a>修改next配置文件</h2><p>打开<code>\themes\hexo-theme-next-master\_config.yml</code>文件(next主题的配置文件),找到如下区域：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Internal version: 4.6.2</span></span><br><span class="line">  <span class="comment"># See: https://fontawesome.com</span></span><br><span class="line">  <span class="comment"># Example:</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line"><span class="attr">  fontawesome:</span></span><br></pre></td></tr></table></figure>

<p>默认是空值,这里我们需要填入刚才下载的文件路径</p>
<blockquote>
<p>注：这里的路径是经过hexo生成后网站的相对路径</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Internal version: 4.6.2</span></span><br><span class="line">  <span class="comment"># See: https://fontawesome.com</span></span><br><span class="line">  <span class="comment"># Example:</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line"><span class="attr">  fontawesome:</span> <span class="string">/lib/font-awesome/css/font-awesome.min.css</span></span><br></pre></td></tr></table></figure>

<h1 id="法二"><a href="#法二" class="headerlink" title="法二"></a><strong>法二</strong></h1><p>打开<code>\themes\hexo-theme-next-master\_config.yml</code>文件(next主题的配置文件),找到如下区域：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Internal version: 4.6.2</span></span><br><span class="line">  <span class="comment"># See: https://fontawesome.com</span></span><br><span class="line">  <span class="comment"># Example:</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line"><span class="attr">  fontawesome:</span></span><br></pre></td></tr></table></figure>

<p>按照注释里的默认值填入</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Internal version: 4.6.2</span></span><br><span class="line">  <span class="comment"># See: https://fontawesome.com</span></span><br><span class="line">  <span class="comment"># Example:</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css</span></span><br><span class="line">  <span class="comment"># fontawesome: //cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line"><span class="attr">  fontawesome:</span> <span class="string">//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：这样虽然能解决问题,但国内可能会大幅度拖慢网站加载速度.</p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>font-awesome</tag>
        <tag>图标无法显示</tag>
        <tag>解决办法</tag>
        <tag>font-awesome图标无法显示</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-next添加右上角GitHub挂件</title>
    <url>/blog/posts/96ddfe32.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>在<code>next</code>主题配置文件<code>_config.yml</code>中找到如下设置<br>并且把<code>enable</code>项改为<code>true</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  permalink:</span> <span class="attr">https://github.com/zzt112358</span></span><br><span class="line"><span class="attr">  title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：需要把<code>permalink</code>项改为你自己的github链接哦,效果可参考本站</p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github挂件</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-next在文章和侧栏下方添加版权信息</title>
    <url>/blog/posts/b34fddce.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>在<code>next</code>主题配置文件<code>_config.yml</code>中找到如下设置<br>并且把<code>sidebar</code>,<code>post</code>项改为<code>true</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license.</span></span><br><span class="line"><span class="comment"># CC licenses are available in 39 languages, where you can find the specific and correct abbreviation you need.</span></span><br><span class="line"><span class="comment"># Valid values of language: deed.zh, deed.fr, deed.de, etc.</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line"><span class="attr">  license:</span> <span class="string">by-nc-sa</span></span><br><span class="line"><span class="attr">  sidebar:</span> <span class="literal">true</span> </span><br><span class="line"><span class="attr">  post:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：<code>sidebar</code>指的是侧栏下方,<code>post</code>指的是文章底部,效果可参考本站</p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>添加版权信息</tag>
        <tag>版权信息</tag>
      </tags>
  </entry>
  <entry>
    <title>分享一个windows下的一个个性化工具集-uTools</title>
    <url>/blog/posts/1798eddd.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<blockquote>
<p>首先,我大力推荐这款软件,非常好用,方便.</p>
</blockquote>
<p><a href="https://u.tools" target="_blank" rel="noopener">官网-</a><a href="https://u.tools" target="_blank" rel="noopener">https://u.tools</a></p>
<h3 id="官方简介："><a href="#官方简介：" class="headerlink" title="官方简介："></a>官方简介：</h3><p>uTools是一个极简、插件化、跨平台的现代桌面软件.通过自由选配丰富的插件,打造你得心应手的工具集合.当你熟悉它后,能够为你节约大量时间,让你可以更加专注地改变世界.</p>
<p>说白了就是个插件集合,非常方便好用的插件集合.</p>
<h3 id="支持的插件"><a href="#支持的插件" class="headerlink" title="支持的插件"></a>支持的插件</h3><blockquote>
<p>简单来说,就是很强大</p>
</blockquote>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201744.PNG" alt="Pic"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201747.PNG" alt="Pic"><br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201749.PNG" alt="Pic"></p>
<h3 id="设置页面"><a href="#设置页面" class="headerlink" title="设置页面"></a>设置页面</h3><blockquote>
<p>支持自定义快捷键</p>
</blockquote>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201754.PNG" alt="Pic"></p>
<hr>
<p>结语： 非常推荐</p>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>工具分享</tag>
        <tag>windows</tag>
        <tag>工具</tag>
        <tag>uTools</tag>
        <tag>插件</tag>
        <tag>工具集</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-NexT添加点击爱心效果</title>
    <url>/blog/posts/a32d7646.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<blockquote>
<p>本文出处：<a href="https://asdfv1929.github.io/2018/01/26/click-love/" target="_blank" rel="noopener">https://asdfv1929.github.io/2018/01/26/click-love/</a></p>
<p>感谢大佬提供的代码(<em>^_^</em>).</p>
</blockquote>
<h2 id="创建JS文件"><a href="#创建JS文件" class="headerlink" title="创建JS文件"></a><strong>创建JS文件</strong></h2><p>在<code>\themes\hexo-theme-next-master\source\js</code>目录中新建文件<code>clicklove.js</code><br>然后把下面的代码拷贝到这个js文件中</p>
<p>代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>

<h2 id="引用JS文件"><a href="#引用JS文件" class="headerlink" title="引用JS文件"></a><strong>引用JS文件</strong></h2><p>在文件<code>\themes\hexo-theme-next-master\layout\_layout.swig</code>或文件<code>\themes\hexo-theme-next-master\layout\_partials\footer.swig</code>的<strong>末尾</strong>中添加如下代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/clicklove.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：在文件<code>_layout.swig</code>或<code>footer.swig</code>中添加引用代码均有效</p>
<p><del>本博客使用的是在<code>_layout.swig</code>文件末尾添加引用代码</del><br>本博客使用的是next自带的点击爆炸效果</p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>桃心效果</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法学习</title>
    <url>/blog/posts/9757d07e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<blockquote>
<p>此文章为我自己在学习hexo过程中的积累与所得,如有不足,请指正.</p>
</blockquote>
<h2 id="markdown编辑器"><a href="#markdown编辑器" class="headerlink" title="markdown编辑器"></a><strong>markdown编辑器</strong></h2><p>个人推荐使用 <a href="https://visualstudio.microsoft.com/zh-hans/downloads/" target="_blank" rel="noopener"><code>Visual Studio Code</code></a>简洁明了,使用方便,支持实时渲染.(其实是因为我懒得在折腾一个编辑器了(<em>^_^</em>) )</p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a><strong>标题</strong></h2><p>markdown的标题标记分为两种,由<code>#</code>和<code>= -</code>组成</p>
<ol>
<li><code>#</code>标记</li>
</ol>
<p>在标题前加<code>#</code>即可,是几级标题就加几个<code>#</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">##### 四级标题</span></span><br><span class="line"><span class="section">###### 五级标题</span></span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202203.PNG" alt="标题"></p>
<ol start="2">
<li><code>= -</code>标记</li>
</ol>
<p>在<code>标题下</code>加上任意个<code>=</code>代表一级标题,<code>-</code>代表二级标题</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">一级标题</span><br><span class="line">===</span><br><span class="line"></span><br><span class="line">二级标题</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202207.PNG" alt="标题"></p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a><strong>引用</strong></h2><p>标记为<code>&gt;</code>,注意标记和内容之间的空格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 例子</span><br><span class="line">&gt; 引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行.</span><br><span class="line">&gt;</span><br><span class="line">&gt; 这样可以空出一行</span><br><span class="line"></span><br><span class="line">&gt; 这样断开就是两个了</span><br><span class="line"></span><br><span class="line">&gt;&gt; 嵌套两层</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&gt;&gt; 嵌套多层</span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<blockquote>
<p>例子<br>引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行,引用会自动换行.</p>
<p>这样可以空出一行</p>
</blockquote>
<blockquote>
<p>这样断开就是两个了</p>
</blockquote>
<blockquote>
<blockquote>
<p>嵌套两层</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>嵌套多层</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a><strong>列表</strong></h2><p>列表分为<code>有序列表</code>和<code>无序列表</code></p>
<ol>
<li>有序列表</li>
</ol>
<p>使用<code>数字</code>和<code>.</code>表示有序列表,注意点号后有一个空格</p>
<blockquote>
<p>有趣的是：markdown中有序列表只认第一个序号,之后的序号由系统自动生成,所以之后的序号可以随便写.</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>这是第一个</span><br><span class="line"><span class="bullet">2. </span>这是第二个</span><br><span class="line"><span class="bullet">1. </span>这是第三个</span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202215.PNG" alt="有序列表"></p>
<ol start="2">
<li>无序列表</li>
</ol>
<p>标记符号<code>*</code>、<code>+</code>、<code>-</code>,注意符号和内容直接有一个空格</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>这是第一个</span><br><span class="line"><span class="bullet">+ </span>这是第二个</span><br><span class="line"><span class="bullet">- </span>这是第三个</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202219.PNG" alt="无序列表"></p>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a><strong>分割线</strong></h2><p>markdown的分割线语法非常简单仅需三个以上的<code>-</code>或<code>*</code>即可</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">内容</span><br><span class="line"></span><br><span class="line"><span class="strong">*****</span><span class="strong">*****</span></span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<hr>
<p>内容</p>
<hr>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a><strong>表格</strong></h2><p>markdown也提供了非常方便的制作表格的方式</p>
<blockquote>
<p>下面的表格每一行两边的<code>|</code>其实是可以省略的</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|表头1|表头2|表头3|</span><br><span class="line">|---|---|---|</span><br><span class="line">|内容1|内容2|内容3|</span><br><span class="line">|内容4|内容5|内容6|</span><br><span class="line"></span><br><span class="line">----- 这里有分割线</span><br><span class="line"></span><br><span class="line">表头1|表头2|表头3</span><br><span class="line">---|---|---</span><br><span class="line">内容1|内容2|内容3</span><br><span class="line">内容4|内容5|内容6</span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<hr>
<table>
<thead>
<tr>
<th>表头1</th>
<th>表头2</th>
<th>表头3</th>
</tr>
</thead>
<tbody><tr>
<td>内容1</td>
<td>内容2</td>
<td>内容3</td>
</tr>
<tr>
<td>内容4</td>
<td>内容5</td>
<td>内容6</td>
</tr>
</tbody></table>
<hr>
<table>
<thead>
<tr>
<th>表头1</th>
<th>表头2</th>
<th>表头3</th>
</tr>
</thead>
<tbody><tr>
<td>内容1</td>
<td>内容2</td>
<td>内容3</td>
</tr>
<tr>
<td>内容4</td>
<td>内容5</td>
<td>内容6</td>
</tr>
<tr>
<td>—</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a><strong>链接</strong></h2><p>格式： <code>[链接描述](链接地址) 或者 &lt;链接地址&gt;</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">https://www.baidu.com</span>)</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">https:</span>//<span class="attr">www.baidu.com</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<hr>
<p><a href="https://www.baidu.com" target="_blank" rel="noopener">百度</a></p>
<p><a href="https://www.baidu.com" target="_blank" rel="noopener">https://www.baidu.com</a></p>
<hr>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a><strong>图片</strong></h2><p>格式： <code>![图片描述](图片地址)</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">Pic</span>](<span class="link">https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202354.PNG</span>)</span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<p><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328202354.PNG" alt="Pic"></p>
<h2 id="插入音频和视频"><a href="#插入音频和视频" class="headerlink" title="插入音频和视频"></a><strong>插入音频和视频</strong></h2><blockquote>
<p>注：如果可以使用像B站和网易云的外链播放器请用之,毕竟播放音频和视频太消耗服务器资源</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">### 视频插入</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"//player.bilibili.com/player.html?aid=39478299&amp;bvid=BV1Vt41167id&amp;cid=69360718&amp;page=1"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">framespacing</span>=<span class="string">"0"</span> <span class="attr">allowfullscreen</span>=<span class="string">"true"</span>&gt;</span></span> <span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">### 音频插入</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">298</span> <span class="attr">height</span>=<span class="string">52</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=456869610&amp;auto=0&amp;height=32"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<hr>
<h3 id="视频插入-Justin-Timberlake-Five-Hundred-Miles-mv"><a href="#视频插入-Justin-Timberlake-Five-Hundred-Miles-mv" class="headerlink" title="视频插入 Justin Timberlake - Five Hundred Miles-mv"></a>视频插入 Justin Timberlake - Five Hundred Miles-mv</h3><iframe src="//player.bilibili.com/player.html?aid=39478299&bvid=BV1Vt41167id&cid=69360718&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<hr>
<h3 id="音频插入-Justin-Timberlake-Five-Hundred-Miles-mp3"><a href="#音频插入-Justin-Timberlake-Five-Hundred-Miles-mp3" class="headerlink" title="音频插入 Justin Timberlake - Five Hundred Miles-mp3"></a>音频插入 Justin Timberlake - Five Hundred Miles-mp3</h3><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=456869610&auto=0&height=32"></iframe>

<hr>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a><strong>字体</strong></h2><p>markdown中可便捷地设置斜体和粗体和删除线和上下标文字,标记为<code>*</code>和<code>_</code>和<code>~</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span></span><br><span class="line"><span class="emphasis">_斜体_</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**粗体**</span></span><br><span class="line"><span class="strong">__粗体__</span></span><br><span class="line"></span><br><span class="line"><span class="strong">***粗斜体**</span>*</span><br><span class="line"><span class="strong">___粗斜体__</span>_</span><br><span class="line"></span><br><span class="line">~~删除线~~</span><br><span class="line"></span><br><span class="line"><span class="strong">***~~混合使用~~**</span>*</span><br><span class="line"></span><br><span class="line">这是<span class="xml"><span class="tag">&lt;<span class="name">sup</span>&gt;</span></span><span class="strong">**上标文字**</span><span class="xml"><span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">这是<span class="xml"><span class="tag">&lt;<span class="name">sub</span>&gt;</span></span><span class="strong">**~~下标文字~~**</span><span class="xml"><span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<hr>
<p><em>斜体</em><br><em>斜体</em></p>
<p><strong>粗体</strong><br><strong>粗体</strong></p>
<p><strong><em>粗斜体</em></strong><br><strong><em>粗斜体</em></strong></p>
<p><del>删除线</del></p>
<p><strong><em><del>混合使用</del></em></strong></p>
<p>这是<sup><strong>上标文字</strong></sup></p>
<p>这是<sub><strong><del>下标文字</del></strong></sub></p>
<hr>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h2><p>代码按位置可分为两种,一种是行内代码段,另一种是代码区块</p>
<p>1.行内代码段</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">代码段<span class="code">`int a = 1;`</span></span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<p>代码段<code>int a = 1;</code></p>
<p>2.代码区块</p>
<p>代码区块可用三个“ ` ”或四个空格来标记</p>
<p>其中” ` “支持代码高亮</p>
<blockquote>
<p>代码来源：<a href="https://blog.csdn.net/chumengwa0046/article/details/89155084" target="_blank" rel="noopener">https://blog.csdn.net/chumengwa0046/article/details/89155084</a> </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">​&#96;&#96;&#96; c &gt;注意这里有空格</span><br><span class="line"># include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    int a[] &#x3D; &#123;900, 2, 3, -58, 34, 76, 32, 43, 56, -70, 35, -234, 532, 543, 2500&#125;;</span><br><span class="line">    int n;  &#x2F;&#x2F;存放数组a中元素的个数</span><br><span class="line">    int i;  &#x2F;&#x2F;比较的轮数</span><br><span class="line">    int j;  &#x2F;&#x2F;每轮比较的次数</span><br><span class="line">    int buf;  &#x2F;&#x2F;交换数据时用于存放中间数据</span><br><span class="line">    n &#x3D; sizeof(a) &#x2F; sizeof(a[0]);  &#x2F;*a[0]是int型, 占4字节, 所以总的字节数除以4等于元素的个数*&#x2F;</span><br><span class="line">    for (i&#x3D;0; i&lt;n-1; ++i)  &#x2F;&#x2F;比较n-1轮</span><br><span class="line">    &#123;</span><br><span class="line">        for (j&#x3D;0; j&lt;n-1-i; ++j)  &#x2F;&#x2F;每轮比较n-1-i次,</span><br><span class="line">        &#123;</span><br><span class="line">            if (a[j] &lt; a[j+1])</span><br><span class="line">            &#123;</span><br><span class="line">                buf &#x3D; a[j];</span><br><span class="line">                a[j] &#x3D; a[j+1];</span><br><span class="line">                a[j+1] &#x3D; buf;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for (i&#x3D;0; i&lt;n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%d\x20&quot;, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">  &gt;这里是空四个空格</span><br><span class="line">    # include &lt;stdio.h&gt;</span><br><span class="line">    int main(void)</span><br><span class="line">    &#123;</span><br><span class="line">        int a[] &#x3D; &#123;900, 2, 3, -58, 34, 76, 32, 43, 56, -70, 35, -234, 532, 543, 2500&#125;;</span><br><span class="line">        int n;  &#x2F;&#x2F;存放数组a中元素的个数</span><br><span class="line">        int i;  &#x2F;&#x2F;比较的轮数</span><br><span class="line">        int j;  &#x2F;&#x2F;每轮比较的次数</span><br><span class="line">        int buf;  &#x2F;&#x2F;交换数据时用于存放中间数据</span><br><span class="line">        n &#x3D; sizeof(a) &#x2F; sizeof(a[0]);  &#x2F;*a[0]是int型, 占4字节, 所以总的字节数除以4等于元素的个数*&#x2F;</span><br><span class="line">        for (i&#x3D;0; i&lt;n-1; ++i)  &#x2F;&#x2F;比较n-1轮</span><br><span class="line">        &#123;</span><br><span class="line">            for (j&#x3D;0; j&lt;n-1-i; ++j)  &#x2F;&#x2F;每轮比较n-1-i次,</span><br><span class="line">                &#123;</span><br><span class="line">                if (a[j] &lt; a[j+1])</span><br><span class="line">                &#123;</span><br><span class="line">                    buf &#x3D; a[j];</span><br><span class="line">                    a[j] &#x3D; a[j+1];</span><br><span class="line">                    a[j+1] &#x3D; buf;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for (i&#x3D;0; i&lt;n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;%d\x20&quot;, a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[] = &#123;<span class="number">900</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">-58</span>, <span class="number">34</span>, <span class="number">76</span>, <span class="number">32</span>, <span class="number">43</span>, <span class="number">56</span>, <span class="number">-70</span>, <span class="number">35</span>, <span class="number">-234</span>, <span class="number">532</span>, <span class="number">543</span>, <span class="number">2500</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> n;  <span class="comment">//存放数组a中元素的个数</span></span><br><span class="line">    <span class="keyword">int</span> i;  <span class="comment">//比较的轮数</span></span><br><span class="line">    <span class="keyword">int</span> j;  <span class="comment">//每轮比较的次数</span></span><br><span class="line">    <span class="keyword">int</span> buf;  <span class="comment">//交换数据时用于存放中间数据</span></span><br><span class="line">    n = <span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]);  <span class="comment">/*a[0]是int型, 占4字节, 所以总的字节数除以4等于元素的个数*/</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; ++i)  <span class="comment">//比较n-1轮</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;n<span class="number">-1</span>-i; ++j)  <span class="comment">//每轮比较n-1-i次,</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j] &lt; a[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                buf = a[j];</span><br><span class="line">                a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">                a[j+<span class="number">1</span>] = buf;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\x20"</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<pre><code># include &lt;stdio.h&gt;
int main(void)
{
    int a[] = {900, 2, 3, -58, 34, 76, 32, 43, 56, -70, 35, -234, 532, 543, 2500};
    int n;  //存放数组a中元素的个数
    int i;  //比较的轮数
    int j;  //每轮比较的次数
    int buf;  //交换数据时用于存放中间数据
    n = sizeof(a) / sizeof(a[0]);  /*a[0]是int型, 占4字节, 所以总的字节数除以4等于元素的个数*/
    for (i=0; i&lt;n-1; ++i)  //比较n-1轮
    {
        for (j=0; j&lt;n-1-i; ++j)  //每轮比较n-1-i次,
            {
            if (a[j] &lt; a[j+1])
            {
                buf = a[j];
                a[j] = a[j+1];
                a[j+1] = buf;
            }
        }
    }
    for (i=0; i&lt;n; ++i)
    {
        printf(&quot;%d\x20&quot;, a[i]);
    }
    printf(&quot;\n&quot;);
    return 0;
}</code></pre><hr>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a><strong>注释</strong></h2><p>注释是给自己看的,预览时也不会出现,当然发布出去别人也不会看见.</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--注释--&gt;</span></span></span><br></pre></td></tr></table></figure>

<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>markdown 可以利用反斜杠\来插入一些在语法中有其它意义的符号</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">\<span class="emphasis">*\*</span>这里的星号没有markdown中标记作用\<span class="emphasis">*\*</span></span><br></pre></td></tr></table></figure>

<p>效果如下</p>
<hr>
<p>**这里的星号没有markdown中标记作用**</p>
<hr>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>markdown</tag>
        <tag>markdown语法</tag>
      </tags>
  </entry>
  <entry>
    <title>分享一个windows软件卸载工具-Geek</title>
    <url>/blog/posts/f1266071.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>geek是一个<strong>体积超小</strong>而又非常强大的windows<strong>免费</strong>软件卸载工具</p>
<p>重点是免费版<strong>完全绿色无需安装</strong>,<strong>下载即用</strong>,<strong>无广告</strong>,非常良心.</p>
<p>官网有收费pro版,不过我觉得日常使用免费版就足够了.</p>
<p>下载链接： <a href="https://geekuninstaller.com" target="_blank" rel="noopener">官网地址</a></p>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>工具分享</tag>
        <tag>windows</tag>
        <tag>geek</tag>
        <tag>软件卸载</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux中的chattr命令</title>
    <url>/blog/posts/534d917a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<blockquote>
<p>注:本文全程参考百度文库</p>
</blockquote>
<ul>
<li>语法：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chattr [-RV][-v&lt;版本编号&gt;][+&#x2F;-&#x2F;&#x3D;&lt;属性&gt;][文件或目录...]</span><br></pre></td></tr></table></figure>

<ul>
<li>属性说明：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A：即Atime,告诉系统不要修改对这个文件的最后访问时间.</span><br><span class="line">S：即Sync,一旦应用程序对这个文件执行了写操作,使系统立刻把修改的结果写到磁盘.</span><br><span class="line">a：即Append Only,系统只允许在这个文件之后追加数据,不允许任何进程覆盖或截断这个文件.如果目录具有这个属性,系统将只允许在这个目录下建立和修改文件,而不允许删除任何文件.</span><br><span class="line">b：不更新文件或目录的最后存取时间.</span><br><span class="line">c：将文件或目录压缩后存放.</span><br><span class="line">d：当dump程序执行时,该文件或目录不会被dump备份.</span><br><span class="line">D:检查压缩文件中的错误.</span><br><span class="line">i：即Immutable,系统不允许对这个文件进行任何的修改.如果目录具有这个属性,那么任何的进程只能修改目录之下的文件,不允许建立和删除文件.</span><br><span class="line">s：彻底删除文件,不可恢复,因为是从磁盘上删除,然后用0填充文件所在区域.</span><br><span class="line">u：当一个应用程序请求删除这个文件,系统会保留其数据块以便以后能够恢复删 除这个文件,用来防止意外删除文件或目录.</span><br><span class="line">t:文件系统支持尾部合并(tail-merging).</span><br><span class="line">X：可以直接访问压缩文件的内容.</span><br></pre></td></tr></table></figure>

<ul>
<li>参数说明：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-R 递归处理,将指定目录下的所有文件及子目录一并处理.</span><br><span class="line">-v&lt;版本编号&gt; 设置文件或目录版本.</span><br><span class="line">-V 显示指令执行过程.</span><br><span class="line">+&lt;属性&gt; 开启文件或目录的该项属性.</span><br><span class="line">-&lt;属性&gt; 关闭文件或目录的该项属性.</span><br><span class="line">&#x3D;&lt;属性&gt; 指定文件或目录的该项属性.</span><br></pre></td></tr></table></figure>

<ul>
<li>例子：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chattr +i file.ini &#x2F;&#x2F; 命令防止系统中某个关键文件被修改;</span><br><span class="line">chattr +a file.ini &#x2F;&#x2F;  让某个文件只能往里面追加数据,但不能删除.</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>chattr</tag>
        <tag>Linux命令</tag>
      </tags>
  </entry>
  <entry>
    <title>分享一个免费内网穿透工具-SAKURA-FRP</title>
    <url>/blog/posts/c25dba02.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<blockquote>
<p><a href="https://www.natfrp.org/" target="_blank" rel="noopener">官方网站-Sakura Frp</a></p>
</blockquote>
<ul>
<li><p>支持自定义域名(通过CNAME解析官方服务器)</p>
</li>
<li><p>支持免备案服务</p>
</li>
<li><p>免费用户映射数量上限为5-o(╥﹏╥)o</p>
</li>
<li><p>支持映射：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TCP 映射</span><br><span class="line">基础的 TCP 映射,适用于大多数服务,例如远程桌面、SSH、Minecraft、泰拉瑞亚等</span><br><span class="line">UDP 映射</span><br><span class="line">基础的 UDP 映射,适用于域名解析、部分基于 UDP 协议的游戏等</span><br><span class="line">HTTP 映射</span><br><span class="line">搭建网站专用映射,80 端口访问,只能使用国外线路建站.</span><br><span class="line">HTTPS 映射</span><br><span class="line">带有 SSL 加密的网站映射,443 端口访问,可以使用国内&#x2F;国外线路建站.</span><br><span class="line">XTCP 映射</span><br><span class="line">客户端之间点对点 (P2P) 连接协议,流量不经过服务器,适合大流量传输的场景,需要两台设备之间都运行一个客户端.</span><br><span class="line">STCP 映射</span><br><span class="line">安全交换 TCP 连接协议,基于 TCP,访问此服务的用户也需要运行一个客户端,才能建立连接,流量由服务器转发.</span><br><span class="line">BungeeCord 映射</span><br><span class="line">此类型映射用于解决传统端口转发后 MC 服务器玩家 IP 全部变成 127.0.0.1 的问题.</span><br></pre></td></tr></table></figure>

<blockquote>
<p>个人感受：速度不错,稳定性很高,非常推荐.</p>
</blockquote>
]]></content>
      <categories>
        <category>工具分享</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Sakura Frp</tag>
        <tag>frp</tag>
        <tag>内网穿透</tag>
        <tag>免费内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>仿天津市高考数学答题卡-图片</title>
    <url>/blog/posts/4e8dea96.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<blockquote>
<p>注：请不要直接在网页图片上另存为,网页上的图片已经被压缩了.</p>
</blockquote>
<ul>
<li>答题卡正面<br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201144.jpg" alt="仿天津市高考数学答题卡正面"></li>
<li>答题卡背面<br><img src="https://gitee.com/zzttzz/blogpic/raw/master/pic/20200328201153.jpg" alt="仿天津市高考数学答题卡背面"></li>
</ul>
<hr>
<ul>
<li><a href="https://pan.baidu.com/s/11k5oS2quKtnesKPFD72ucQ" target="_blank" rel="noopener">点击这里下载压缩包 <em>zip格式</em> 提取码：<code>9smn</code></a></li>
</ul>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>仿高考数学答题卡</tag>
        <tag>日常</tag>
        <tag>高三</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Nginx下wordpress伪静态后文章/后台页无法访问的问题</title>
    <url>/blog/posts/449afa2b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>在Nginx的配置文档中添加以下代码：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span> /yourweb 把这里更改为你的网站根目录;  </span><br><span class="line">        <span class="attribute">if</span> (-f <span class="variable">$request_filename</span>/index.html)&#123;</span><br><span class="line">               <span class="attribute">rewrite</span> (.*) <span class="variable">$1</span>/index.html <span class="literal">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">if</span> (-f <span class="variable">$request_filename</span>/index.php)&#123;</span><br><span class="line">               <span class="attribute">rewrite</span> (.*) <span class="variable">$1</span>/index.php;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="attribute">if</span> (!-f <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">               <span class="attribute">rewrite</span> (.*) /index.php;</span><br><span class="line">         &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">rewrite</span> /wp-admin$ <span class="variable">$scheme</span>://<span class="variable">$host</span><span class="variable">$uri</span>/ <span class="literal">permanent</span>;</span><br></pre></td></tr></table></figure>

<p>其中需要更改自己的网站根目录</p>
]]></content>
      <categories>
        <category>建站相关</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>wordpress</tag>
        <tag>伪静态</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下设置Sakura Frp为服务,开机自动启动</title>
    <url>/blog/posts/a01b6c7d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--注释-->

<a id="more"></a>

<!--![pic](https://img.xjh.me/random_img.php?type=bg&ctype=nature&return=302)-->
<p><img src="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" alt="pic"></p>
<p>本文转载自:<a href="https://www.zerobbs.net/thread/5" target="_blank" rel="noopener">Sarkura Frp官网教程</a></p>
<p>开始设置服务,首先打开终端,执行命令：</p>
<p><code>vi /etc/systemd/system/sakurafrp.service</code></p>
<p>按下 a 进入编辑模式,复制以下内容并粘贴到 vi中:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Sakura Frp Client</span><br><span class="line">Wants&#x3D;network-online.target</span><br><span class="line">After&#x3D;network-online.target</span><br><span class="line">[Service]</span><br><span class="line">User&#x3D;root</span><br><span class="line">WorkingDirectory&#x3D;&#x2F;你的客户端储存位置&#x2F;</span><br><span class="line">LimitNOFILE&#x3D;4096</span><br><span class="line">PIDFile&#x3D;&#x2F;var&#x2F;run&#x2F;sakurafrp&#x2F;client.pid</span><br><span class="line">ExecStart&#x3D;&#x2F;你的客户端储存位置&#x2F;客户端文件名 --su&#x3D;你的账号 --sp&#x3D;你的密码 --sid&#x3D;你要选择的服务器的ID(就是服务器列表左侧的数字)</span><br><span class="line">Restart&#x3D;on-failure</span><br><span class="line">StartLimitInterval&#x3D;600</span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>

<p>例如我的客户端储存在 /root/sakurafrp/,文件名是 Sakura_frpc_linux_amd64,账号是 233,密码是 888,选择的服务器是宁波电信,ID 为 0,那么我就填写以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Sakura Frp Client</span><br><span class="line">[Service]</span><br><span class="line">User&#x3D;root</span><br><span class="line">WorkingDirectory&#x3D;&#x2F;root&#x2F;sakurafrp&#x2F;</span><br><span class="line">LimitNOFILE&#x3D;4096</span><br><span class="line">PIDFile&#x3D;&#x2F;var&#x2F;run&#x2F;sakurafrp&#x2F;client.pid</span><br><span class="line">ExecStart&#x3D;&#x2F;root&#x2F;sakurafrp&#x2F;Sakura_frpc_linux_amd64 --su&#x3D;233 --sp&#x3D;888 --sid&#x3D;0</span><br><span class="line">Restart&#x3D;on-failure</span><br><span class="line">StartLimitInterval&#x3D;600</span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>

<p>然后按 Esc,接着输入 ZZ 保存退出.</p>
<p>接着输入以下命令来创建服务：</p>
<p><code>systemctl daemon-reload</code></p>
<p>接下来启动服务：</p>
<p><code>systemctl start sakurafrp</code></p>
<p>将服务设置为开机启动：</p>
<p><code>systemctl enable sakurafrp</code></p>
<p>如果要停止运行客户端,只需要输入：</p>
<p><code>systemctl stop sakurafrp</code></p>
<p>如果要禁止开机启动,输入：</p>
<p><code>systemctl disable sakurafrp</code></p>
]]></content>
      <categories>
        <category>建站相关</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Sakura Frp</tag>
        <tag>frp</tag>
        <tag>内网穿透</tag>
      </tags>
  </entry>
</search>
